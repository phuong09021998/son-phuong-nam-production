{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react'; // import { toggleChatBubble } from 'redux/actions/ui';\n\nimport { Avatar } from 'antd';\nimport styles from './ChatWindow.module.scss';\nimport { UserOutlined } from '@ant-design/icons'; // import Button from '@material-ui/core/Button';\n\nimport UserAvatar from 'components/UserAvatar';\nimport _ from 'lodash';\nimport moment from 'moment'; // @ts-ignore\n\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport GoogleLogin from 'react-google-login';\nimport InputEmoji from 'components/EmojiInput';\nimport { loginByGoogle, loginByFacebook } from 'redux/actions/users';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\n\nfunction ChatWindow({\n  messages,\n  // handleOpenLogin,\n  handleSendMessage,\n  handleCloseChat,\n  user,\n  isAdmin,\n  isOnline,\n  roomInfo,\n  handleClick,\n  loginByGoogle,\n  loginByGoogleError,\n  // loginUserError;\n  loginByFacebookError,\n  loginByFacebook\n}) {\n  // @ts-ignore\n  let lastSeenIndex;\n\n  if (isAdmin && messages.length) {\n    if (messages[messages.length - 1].sender === 'Admin') {\n      // @ts-ignore\n      lastSeenIndex = _.findLastIndex(messages, message => message.seen && message.sender === 'Admin');\n    }\n  } else if (!isAdmin && messages.length) {\n    if (messages[messages.length - 1].sender !== 'Admin') {\n      // @ts-ignore\n      lastSeenIndex = _.findLastIndex(messages, message => message.seen && message.sender !== 'Admin');\n    }\n  }\n\n  const renderTime = i => {\n    if (i !== 0) {\n      if (messages[i].createdAt - messages[i - 1].createdAt > 120000) {\n        return __jsx(\"div\", {\n          className: styles.time\n        }, moment(messages[i].createdAt).locale('vi').startOf('minute').fromNow());\n      }\n    } else {\n      return __jsx(\"div\", {\n        className: styles.time\n      }, moment(messages[i].createdAt).locale('vi').startOf('minute').fromNow());\n    }\n  };\n\n  const responseGoogle = data => {\n    console.log(data);\n    loginByGoogle({\n      token: data.tokenId,\n      name: data.profileObj.name,\n      thirdPartyAvatar: data.profileObj.imageUrl,\n      email: data.profileObj.email,\n      googleId: data.googleId\n    });\n  };\n\n  const responseFacebook = data => {\n    // console.log(data);\n    loginByFacebook({\n      token: data.accessToken,\n      name: data.name,\n      email: data.email,\n      facebookId: data.id,\n      thirdPartyAvatar: data.picture.data.url\n    });\n  };\n\n  const renderChatMessages = () => messages.map((item, i) => {\n    if (item.type === 'text') {\n      if (isAdmin) {\n        return item.sender === 'Admin' ? __jsx(\"div\", {\n          key: i\n        }, renderTime(i), __jsx(\"div\", {\n          className: styles.normalText\n        }, item.message), lastSeenIndex === i && __jsx(\"div\", {\n          className: styles.seen\n        }, \" \\u2713 \\u0110\\xE3 xem\")) : __jsx(\"div\", {\n          key: i\n        }, renderTime(i), __jsx(\"div\", {\n          className: styles.senderText\n        }, item.message));\n      } else {\n        return item.sender === 'Admin' ? __jsx(\"div\", {\n          key: i\n        }, renderTime(i), __jsx(\"div\", {\n          className: styles.senderText\n        }, item.message)) : __jsx(\"div\", {\n          key: i\n        }, renderTime(i), __jsx(\"div\", {\n          className: styles.normalText\n        }, item.message), lastSeenIndex === i && __jsx(\"div\", {\n          className: styles.seen\n        }, \" \\u2713 \\u0110\\xE3 xem\"));\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (loginByGoogleError) {\n      message.error(loginByGoogleError);\n    }\n  }, [loginByGoogleError]);\n  useEffect(() => {\n    if (loginByFacebookError) {\n      message.error(loginByFacebookError);\n    }\n  }, [loginByFacebookError]);\n  return __jsx(\"div\", {\n    className: styles.chatWrapper,\n    onClick: handleClick\n  }, __jsx(\"div\", {\n    className: styles.top\n  }, __jsx(\"div\", {\n    className: styles.admin\n  }, __jsx(\"div\", {\n    className: styles.leftAdmin\n  }, typeof roomInfo === 'boolean' ? __jsx(\"div\", {\n    className: styles.avatar\n  }, __jsx(Avatar, {\n    style: {\n      backgroundColor: '#e91e63',\n      width: '3rem',\n      height: '3rem',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: '1.5rem'\n    },\n    icon: __jsx(UserOutlined, null)\n  })) : // @ts-ignore\n  __jsx(UserAvatar, {\n    userId: roomInfo.roomId\n  }), __jsx(\"div\", {\n    className: styles.dot\n  })), __jsx(\"div\", {\n    className: styles.rightAdmin\n  }, typeof roomInfo === 'boolean' ? __jsx(\"div\", {\n    className: styles.name\n  }, \"Admin\") : __jsx(\"div\", {\n    className: styles.name\n  }, roomInfo.roomName), isOnline ? __jsx(\"div\", {\n    className: styles.status\n  }, \"online\") : __jsx(\"div\", {\n    className: styles.statusOffline\n  }, \"offline\"))), __jsx(\"div\", {\n    className: styles.close,\n    onClick: handleCloseChat\n  }, __jsx(\"img\", {\n    src: \"/icons/close-2.svg\",\n    alt: \"close\"\n  }))), user ? __jsx(React.Fragment, null, ' ', __jsx(\"div\", {\n    className: styles.middle,\n    id: \"text\"\n  }, messages && renderChatMessages()), __jsx(\"div\", {\n    className: styles.bottom\n  }, __jsx(\"div\", {\n    className: styles.inputWrapper\n  }, __jsx(\"div\", {\n    className: styles.input\n  }, __jsx(InputEmoji, {\n    cleanOnEnter: true,\n    onEnter: handleSendMessage,\n    placeholder: \"Nh\\u1EADp tin nh\\u1EAFn\"\n  })), __jsx(\"div\", {\n    className: styles.send,\n    onClick: handleSendMessage\n  }, __jsx(\"img\", {\n    src: \"/icons/send.svg\",\n    alt: \"send\"\n  }))))) : __jsx(\"div\", {\n    className: styles.requireLogin\n  }, \"B\\u1EA1n ph\\u1EA3i \\u0111\\u0103ng nh\\u1EADp \\u0111\\u1EC3 chat!\", __jsx(\"br\", null), __jsx(GoogleLogin, {\n    clientId: \"374918945235-8gdpha6da5h9sqva4mgi53ldreces79b.apps.googleusercontent.com\",\n    render: renderProps => __jsx(\"div\", {\n      className: styles.item,\n      onClick: renderProps.onClick\n    }, __jsx(\"div\", {\n      className: styles.icon\n    }, __jsx(\"img\", {\n      src: \"/icons/google.svg\",\n      alt: \"google\"\n    })), __jsx(\"div\", {\n      className: styles.text\n    }, \"\\u0110\\u0103ng nh\\u1EADp b\\u1EB1ng Google\")),\n    buttonText: \"Login\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: 'single_host_origin'\n  }), __jsx(FacebookLogin, {\n    appId: \"659986671317584\" // autoLoad\n    ,\n    fields: \"name,email,picture,id\",\n    callback: responseFacebook,\n    render: renderProps => __jsx(\"div\", {\n      className: styles.item,\n      onClick: renderProps.onClick\n    }, __jsx(\"div\", {\n      className: styles.icon\n    }, __jsx(\"img\", {\n      src: \"/icons/facebook.svg\",\n      alt: \"facebook\"\n    })), __jsx(\"div\", {\n      className: styles.text\n    }, \"\\u0110\\u0103ng nh\\u1EADp b\\u1EB1ng Facebook\"))\n  })));\n}\n\nconst mapStateToProps = state => ({\n  loginByGoogleError: state.users.loginByGoogleError,\n  loginByFacebookError: state.users.loginByFacebookError\n});\n\nexport default connect(mapStateToProps, {\n  loginByGoogle,\n  loginByFacebook\n})(ChatWindow);","map":null,"metadata":{},"sourceType":"module"}