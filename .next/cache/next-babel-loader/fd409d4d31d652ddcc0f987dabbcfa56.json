{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MainLayout from 'layouts/MainLayout';\nimport axios from 'config/axios';\nimport GreenBackground from 'components/GreenBackground';\nimport Projects from 'components/Projects';\nimport Pagination from '@material-ui/lab/Pagination';\nexport default function Service({\n  siteInfo,\n  projects,\n  range\n}) {\n  const {\n    0: items,\n    1: setItems\n  } = useState(projects);\n  const count = Math.floor(range / 9 + 1); // @ts-ignore\n\n  const handlePagination = async (e, value) => {\n    if (value > 1) {\n      const newItems = await axios.get(`/posts?type=project&limit=9&sortBy=createdAt&order=desc&skip=${(value - 1) * 9}`);\n      setItems(newItems.data.posts);\n    } else {\n      setItems(projects);\n    }\n  };\n\n  return __jsx(MainLayout, {\n    title: \"D\\u1EF1 \\xE1n | S\\u01A1n Ph\\u01B0\\u01A1ng Nam\",\n    contacts: siteInfo\n  }, __jsx(GreenBackground, {\n    name: \"D\\u1EF1 \\xE1n\",\n    breadcrumb: \"Trang ch\\u1EE7 / D\\u1EF1 \\xE1n\"\n  }), __jsx(\"div\", {\n    style: {\n      height: '3rem'\n    }\n  }), __jsx(Projects, {\n    projects: items,\n    disableTitle: true,\n    disableLoadMore: true\n  }), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  }, __jsx(Pagination, {\n    count: count,\n    color: \"secondary\",\n    onChange: handlePagination\n  })));\n}\nexport async function getStaticProps() {\n  const siteInfo = await axios.get('/site/info');\n  const projects = await axios.get('/posts?type=project&limit=9&sortBy=createdAt&order=desc');\n  const range = await axios.get('/postrange?type=project');\n  return {\n    props: {\n      siteInfo: siteInfo.data.site.siteInfo,\n      projects: projects.data.posts,\n      range: range.data.range\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/pages/du-an/index.tsx"],"names":["React","useState","MainLayout","axios","GreenBackground","Projects","Pagination","Service","siteInfo","projects","range","items","setItems","count","Math","floor","handlePagination","e","value","newItems","get","data","posts","height","display","justifyContent","getStaticProps","props","site","revalidate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAjB,EAAqD;AAClE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAACQ,QAAD,CAAlC;AACA,QAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAK,GAAG,CAAR,GAAY,CAAvB,CAAd,CAFkE,CAIlE;;AACA,QAAMM,gBAAgB,GAAG,OAAOC,CAAP,EAAeC,KAAf,KAAiC;AACxD,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CACpB,gEAA+D,CAACF,KAAK,GAAG,CAAT,IAAc,CAAE,EAD3D,CAAvB;AAGAN,MAAAA,QAAQ,CAACO,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAR;AACD,KALD,MAKO;AACLV,MAAAA,QAAQ,CAACH,QAAD,CAAR;AACD;AACF,GATD;;AAWA,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,+CAAlB;AAA2C,IAAA,QAAQ,EAAED;AAArD,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,eAAtB;AAA8B,IAAA,UAAU,EAAC;AAAzC,IADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEe,MAAAA,MAAM,EAAE;AAAV;AAAZ,IAFF,EAGE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEZ,KAApB;AAA2B,IAAA,YAAY,EAAE,IAAzC;AAA+C,IAAA,eAAe,EAAE;AAAhE,IAHF,EAIE;AAAK,IAAA,KAAK,EAAE;AAAEa,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC;AAAZ,KACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEZ,KAAnB;AAA0B,IAAA,KAAK,EAAC,WAAhC;AAA4C,IAAA,QAAQ,EAAEG;AAAtD,IADF,CAJF,CADF;AAUD;AAED,OAAO,eAAeU,cAAf,GAAgC;AACrC,QAAMlB,QAAQ,GAAG,MAAML,KAAK,CAACiB,GAAN,CAAU,YAAV,CAAvB;AACA,QAAMX,QAAQ,GAAG,MAAMN,KAAK,CAACiB,GAAN,CAAU,yDAAV,CAAvB;AACA,QAAMV,KAAK,GAAG,MAAMP,KAAK,CAACiB,GAAN,CAAU,yBAAV,CAApB;AAEA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLnB,MAAAA,QAAQ,EAAEA,QAAQ,CAACa,IAAT,CAAcO,IAAd,CAAmBpB,QADxB;AAELC,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,IAAT,CAAcC,KAFnB;AAGLZ,MAAAA,KAAK,EAAEA,KAAK,CAACW,IAAN,CAAWX;AAHb,KADF;AAMLmB,IAAAA,UAAU,EAAE;AANP,GAAP;AAQD","sourcesContent":["import React, { useState } from 'react';\nimport MainLayout from 'layouts/MainLayout';\nimport axios from 'config/axios';\nimport GreenBackground from 'components/GreenBackground';\nimport Projects from 'components/Projects';\nimport Pagination from '@material-ui/lab/Pagination';\n\nexport default function Service({ siteInfo, projects, range }: any) {\n  const [items, setItems] = useState(projects);\n  const count = Math.floor(range / 9 + 1);\n\n  // @ts-ignore\n  const handlePagination = async (e: any, value: number) => {\n    if (value > 1) {\n      const newItems = await axios.get(\n        `/posts?type=project&limit=9&sortBy=createdAt&order=desc&skip=${(value - 1) * 9}`,\n      );\n      setItems(newItems.data.posts);\n    } else {\n      setItems(projects);\n    }\n  };\n\n  return (\n    <MainLayout title=\"Dự án | Sơn Phương Nam\" contacts={siteInfo}>\n      <GreenBackground name=\"Dự án\" breadcrumb=\"Trang chủ / Dự án\" />\n      <div style={{ height: '3rem' }} />\n      <Projects projects={items} disableTitle={true} disableLoadMore={true} />\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <Pagination count={count} color=\"secondary\" onChange={handlePagination} />\n      </div>\n    </MainLayout>\n  );\n}\n\nexport async function getStaticProps() {\n  const siteInfo = await axios.get('/site/info');\n  const projects = await axios.get('/posts?type=project&limit=9&sortBy=createdAt&order=desc');\n  const range = await axios.get('/postrange?type=project');\n\n  return {\n    props: {\n      siteInfo: siteInfo.data.site.siteInfo,\n      projects: projects.data.posts,\n      range: range.data.range,\n    },\n    revalidate: 1,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}