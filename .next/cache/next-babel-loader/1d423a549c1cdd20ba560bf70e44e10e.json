{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeLatest, takeEvery, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/users';\nimport * as api from '../api/users';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction* loginUser({\n  payload\n}) {\n  try {\n    const result = yield call(api.loginUser, payload);\n    yield put(actions.getUserSuccess(_objectSpread({}, result.data.user)));\n  } catch (error) {\n    const errorData = error.response.data;\n\n    if (errorData.error === 'Password is incorrect.') {\n      yield put(actions.loginUserError({\n        error: 'Sai mật khẩu' + uuidv4()\n      }));\n    } else if (errorData.error === 'User not found.') {\n      yield put(actions.loginUserError({\n        error: 'Không tìm thấy người dùng' + uuidv4()\n      }));\n    } else if (errorData.error === 'Cannot use normal login.') {\n      yield put(actions.loginUserError({\n        error: 'Không thể đăng nhập bằng cách này' + uuidv4()\n      }));\n    } else {\n      yield put(actions.loginUserError({\n        error: errorData.error\n      }));\n    }\n  }\n}\n\nfunction* watchLoginUser() {\n  yield takeLatest(actions.Types.LOGIN_USER, loginUser);\n}\n\nfunction* getUser() {\n  try {\n    const result = yield call(api.getUser);\n    yield put(actions.getUserSuccess(_objectSpread({}, result.data.user)));\n  } catch (e) {\n    // yield put(actions.getUserSuccess({ ...result.data.user }));\n    yield put(actions.getUserError());\n  }\n}\n\nfunction* watchGetUsersRequest() {\n  yield takeEvery(actions.Types.GET_USER, getUser);\n}\n\nfunction* createUser({\n  payload\n}) {\n  try {\n    const result = yield call(api.createUser, payload);\n    yield put(actions.getUserSuccess(_objectSpread({}, result.data.user)));\n  } catch (error) {\n    console.log(error.response);\n  }\n}\n\nfunction* loginByGoogle({\n  payload\n}) {\n  try {\n    const result = yield call(api.loginByGoogle, payload);\n    yield put(actions.getUserSuccess(_objectSpread({}, result.data.user)));\n  } catch (error) {\n    const errorData = error.response.data;\n\n    if (errorData.error === 'Email is already in use.') {\n      yield put(actions.loginByGoogleError({\n        error: 'Email đã tồn tại'\n      }));\n    } else {\n      yield put(actions.loginByGoogleError({\n        error: 'Lỗi bất ngờ đã xảy ra'\n      }));\n    }\n  }\n}\n\nfunction* watchCreateUser() {\n  yield takeLatest(actions.Types.CREATE_USER, createUser);\n}\n\nfunction* watchLoginByGoogle() {\n  yield takeLatest(actions.Types.LOGIN_BY_GOOGLE, loginByGoogle);\n}\n\nfunction* logOutUser() {\n  yield call(api.logoutUser);\n  yield call(getUser);\n}\n\nfunction* watchLogOutUser() {\n  yield takeLatest(actions.Types.LOG_OUT_USER, logOutUser);\n}\n\nfunction* loginByFacebook({\n  payload\n}) {\n  try {\n    const result = yield call(api.loginByFacebook, payload);\n    yield put(actions.getUserSuccess(_objectSpread({}, result.data.user)));\n  } catch (error) {\n    const errorData = error.response.data;\n\n    if (errorData.error === 'Email is already in use.') {\n      yield put(actions.loginByFacebookError({\n        error: 'Email đã tồn tại'\n      }));\n    } else {\n      yield put(actions.loginByFacebookError({\n        error: 'Lỗi bất ngờ đã xảy ra'\n      }));\n    }\n  }\n}\n\nfunction* watchLoginByFacebook() {\n  yield takeLatest(actions.Types.LOGIN_BY_FACEBOOK, loginByFacebook);\n}\n\nconst userSagas = [fork(watchLoginUser), fork(watchGetUsersRequest), fork(watchCreateUser), fork(watchLoginByGoogle), fork(watchLogOutUser), fork(watchLoginByFacebook)];\nexport default userSagas;","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/redux/sagas/users.ts"],"names":["takeLatest","takeEvery","call","put","fork","actions","api","v4","uuidv4","loginUser","payload","result","getUserSuccess","data","user","error","errorData","response","loginUserError","watchLoginUser","Types","LOGIN_USER","getUser","e","getUserError","watchGetUsersRequest","GET_USER","createUser","console","log","loginByGoogle","loginByGoogleError","watchCreateUser","CREATE_USER","watchLoginByGoogle","LOGIN_BY_GOOGLE","logOutUser","logoutUser","watchLogOutUser","LOG_OUT_USER","loginByFacebook","loginByFacebookError","watchLoginByFacebook","LOGIN_BY_FACEBOOK","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, takeEvery, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/users';\nimport * as api from '../api/users';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface LoginUser {\n  type: string;\n  payload: {\n    email: string;\n    password: string;\n  };\n}\n\nfunction* loginUser({ payload }: LoginUser) {\n  try {\n    const result = yield call(api.loginUser, payload);\n    yield put(actions.getUserSuccess({ ...result.data.user }));\n  } catch (error) {\n    const errorData = error.response.data;\n    if (errorData.error === 'Password is incorrect.') {\n      yield put(actions.loginUserError({ error: 'Sai mật khẩu' + uuidv4() }));\n    } else if (errorData.error === 'User not found.') {\n      yield put(actions.loginUserError({ error: 'Không tìm thấy người dùng' + uuidv4() }));\n    } else if (errorData.error === 'Cannot use normal login.') {\n      yield put(actions.loginUserError({ error: 'Không thể đăng nhập bằng cách này' + uuidv4() }));\n    } else {\n      yield put(actions.loginUserError({ error: errorData.error }));\n    }\n  }\n}\n\nfunction* watchLoginUser() {\n  yield takeLatest(actions.Types.LOGIN_USER, loginUser);\n}\n\nfunction* getUser() {\n  try {\n    const result = yield call(api.getUser);\n    yield put(actions.getUserSuccess({ ...result.data.user }));\n  } catch (e) {\n    // yield put(actions.getUserSuccess({ ...result.data.user }));\n    yield put(actions.getUserError());\n  }\n}\n\nfunction* watchGetUsersRequest() {\n  yield takeEvery(actions.Types.GET_USER, getUser);\n}\n\nfunction* createUser({ payload }: any) {\n  try {\n    const result = yield call(api.createUser, payload);\n    yield put(actions.getUserSuccess({ ...result.data.user }));\n  } catch (error) {\n    console.log(error.response);\n  }\n}\n\nfunction* loginByGoogle({ payload }: any) {\n  try {\n    const result = yield call(api.loginByGoogle, payload);\n    yield put(actions.getUserSuccess({ ...result.data.user }));\n  } catch (error) {\n    const errorData = error.response.data;\n    if (errorData.error === 'Email is already in use.') {\n      yield put(actions.loginByGoogleError({ error: 'Email đã tồn tại' }));\n    } else {\n      yield put(actions.loginByGoogleError({ error: 'Lỗi bất ngờ đã xảy ra' }));\n    }\n  }\n}\n\nfunction* watchCreateUser() {\n  yield takeLatest(actions.Types.CREATE_USER, createUser);\n}\n\nfunction* watchLoginByGoogle() {\n  yield takeLatest(actions.Types.LOGIN_BY_GOOGLE, loginByGoogle);\n}\n\nfunction* logOutUser() {\n  yield call(api.logoutUser);\n  yield call(getUser);\n}\n\nfunction* watchLogOutUser() {\n  yield takeLatest(actions.Types.LOG_OUT_USER, logOutUser);\n}\n\nfunction* loginByFacebook({ payload }: any) {\n  try {\n    const result = yield call(api.loginByFacebook, payload);\n    yield put(actions.getUserSuccess({ ...result.data.user }));\n  } catch (error) {\n    const errorData = error.response.data;\n    if (errorData.error === 'Email is already in use.') {\n      yield put(actions.loginByFacebookError({ error: 'Email đã tồn tại' }));\n    } else {\n      yield put(actions.loginByFacebookError({ error: 'Lỗi bất ngờ đã xảy ra' }));\n    }\n  }\n}\n\nfunction* watchLoginByFacebook() {\n  yield takeLatest(actions.Types.LOGIN_BY_FACEBOOK, loginByFacebook);\n}\n\nconst userSagas = [\n  fork(watchLoginUser),\n  fork(watchGetUsersRequest),\n  fork(watchCreateUser),\n  fork(watchLoginByGoogle),\n  fork(watchLogOutUser),\n  fork(watchLoginByFacebook),\n];\n\nexport default userSagas;\n"]},"metadata":{},"sourceType":"module"}