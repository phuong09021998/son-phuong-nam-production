{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Types } from '../actions/site';\nconst INITIAL_STATE = {};\nexport default function site(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.GET_CAROUSEL_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          carousel: action.payload.items\n        });\n      }\n\n    case Types.GET_SITE_INFO_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          siteInfo: action.payload.items\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/redux/reducers/site.ts"],"names":["Types","INITIAL_STATE","site","state","action","type","GET_CAROUSEL_SUCCESS","carousel","payload","items","GET_SITE_INFO_SUCCESS","siteInfo"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AAEA,MAAMC,aAAa,GAAG,EAAtB;AAOA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGF,aAAtB,EAAqCG,MAArC,EAAqD;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,KAAK,CAACM,oBAAX;AAAiC;AAC/B,+CACKH,KADL;AAEEI,UAAAA,QAAQ,EAAEH,MAAM,CAACI,OAAP,CAAeC;AAF3B;AAID;;AAED,SAAKT,KAAK,CAACU,qBAAX;AAAkC;AAChC,+CACKP,KADL;AAEEQ,UAAAA,QAAQ,EAAEP,MAAM,CAACI,OAAP,CAAeC;AAF3B;AAID;;AAED;AAAS;AACP,eAAON,KAAP;AACD;AAjBH;AAmBD","sourcesContent":["import { Types } from '../actions/site';\n\nconst INITIAL_STATE = {};\n\ninterface Action {\n  type: string;\n  payload?: any;\n}\n\nexport default function site(state = INITIAL_STATE, action: Action) {\n  switch (action.type) {\n    case Types.GET_CAROUSEL_SUCCESS: {\n      return {\n        ...state,\n        carousel: action.payload.items,\n      };\n    }\n\n    case Types.GET_SITE_INFO_SUCCESS: {\n      return {\n        ...state,\n        siteInfo: action.payload.items,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}