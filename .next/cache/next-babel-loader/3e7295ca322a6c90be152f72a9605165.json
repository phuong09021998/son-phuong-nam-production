{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getProductsByAdmin, createProduct, deleteProduct, updatePublish, updateProduct, updateAvailable } from 'redux/actions/products';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './AdminPosts.module.scss';\nimport TopAdminTable from '../TopAdminTable';\nimport { Table, Space, Popconfirm, message, Switch } from 'antd';\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\nimport FormField from '../FormField';\nimport Button from '@material-ui/core/Button';\nimport { update, generateData, isFormValid } from 'components/utils/formAction'; // @ts-ignore\n\nimport currencyFormatter from 'currency-formatter';\n\nfunction AdminProducts({\n  products,\n  getProductsByAdmin,\n  createProduct,\n  deleteProduct,\n  getProductsError,\n  createProductError,\n  deleteProductError,\n  updatePublish,\n  updateProduct,\n  updatePublishError,\n  updateProductError,\n  updateAvailableError,\n  updateAvailable\n}) {\n  const initialForm = {\n    formError: false,\n    formMessage: '',\n    formdata: {\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'name_input',\n          type: 'text',\n          // placeholder: 'Email',\n          label: 'Tên sản phẩm'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      },\n      image: {\n        element: 'image',\n        value: '',\n        config: {\n          label: 'Ảnh đại diện',\n          placeholder: ''\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        showlabel: true,\n        touched: true,\n        validationMessage: 'Bạn phải nhập mục này'\n      },\n      price: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'price_input',\n          type: 'number',\n          // placeholder: 'Email',\n          label: 'Giá'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      },\n      salePrice: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'sale_price_input',\n          type: 'number',\n          // placeholder: 'Email',\n          label: 'Giá khuyến mãi'\n        },\n        validation: {\n          required: false\n        },\n        valid: true,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      }\n    }\n  };\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: edit,\n    1: setEdit\n  } = useState({\n    active: false,\n    status: 'none'\n  });\n  const {\n    0: form,\n    1: setForm\n  } = useState(initialForm);\n  const {\n    0: isWaiting,\n    1: setWaiting\n  } = useState(false);\n  const columns = [{\n    title: 'Tên sản phẩm',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Giá',\n    dataIndex: 'price',\n    key: 'price',\n    // @ts-ignore\n    render: (price, doc) => {\n      if (doc.salePrice) {\n        return currencyFormatter.format(doc.salePrice, {\n          code: 'VND'\n        });\n      } else {\n        return currencyFormatter.format(doc.price, {\n          code: 'VND'\n        });\n      }\n    }\n  }, {\n    title: 'Xuất bản',\n    dataIndex: 'publish',\n    key: 'publish',\n    render: (publish, record) => __jsx(Switch, {\n      defaultChecked: publish,\n      checkedChildren: __jsx(CheckOutlined, null),\n      unCheckedChildren: __jsx(CloseOutlined, null),\n      onChange: check => handleSwitchChange(check, record._id)\n    })\n  }, {\n    title: 'Hết hàng / Có sẵn',\n    dataIndex: 'available',\n    key: 'available',\n    render: (available, record) => __jsx(Switch, {\n      defaultChecked: available,\n      checkedChildren: __jsx(CheckOutlined, null),\n      unCheckedChildren: __jsx(CloseOutlined, null),\n      onChange: check => handleSwitchAvailableChange(check, record._id)\n    })\n  }, {\n    title: 'Hành động',\n    key: 'action',\n    render: record => __jsx(Space, {\n      size: \"middle\"\n    }, __jsx(\"a\", {\n      onClick: e => handleEdit(e, record.urlTitle)\n    }, \"S\\u1EEDa\"), __jsx(Popconfirm, {\n      title: \"B\\u1EA1n c\\xF3 mu\\u1ED1n s\\u1EA3n ph\\u1EA9m n\\xE0y?\",\n      onConfirm: () => handleDelete(record._id),\n      okText: \"X\\xF3a\",\n      cancelText: \"Kh\\xF4ng\"\n    }, __jsx(\"a\", null, \"X\\xF3a\")))\n  }]; // @ts-ignore\n\n  const handleEdit = (e, urlTitle) => {\n    const productsArr = Object.values(products);\n    const selectedProduct = productsArr.find(product => product.urlTitle === urlTitle);\n    setEdit({\n      active: true,\n      status: selectedProduct._id\n    });\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      formdata: _objectSpread(_objectSpread({}, form.formdata), {}, {\n        name: _objectSpread(_objectSpread({}, form.formdata.name), {}, {\n          value: selectedProduct.name,\n          valid: true\n        }),\n        price: _objectSpread(_objectSpread({}, form.formdata.price), {}, {\n          value: selectedProduct.price,\n          valid: true\n        }),\n        salePrice: _objectSpread(_objectSpread({}, form.formdata.salePrice), {}, {\n          value: selectedProduct.salePrice,\n          valid: true\n        }),\n        image: _objectSpread(_objectSpread({}, form.formdata.image), {}, {\n          value: `/api/product/image/${urlTitle}`,\n          valid: true\n        })\n      })\n    }));\n  };\n\n  const handleSwitchChange = (check, id) => {\n    updatePublish({\n      publish: check,\n      id\n    });\n  };\n\n  const handleSwitchAvailableChange = (check, id) => {\n    updateAvailable({\n      available: check,\n      id\n    });\n  };\n\n  const handleDelete = id => {\n    deleteProduct({\n      id\n    });\n  };\n\n  const handleCreatePost = () => {\n    setEdit({\n      active: true,\n      status: 'create'\n    });\n    setWaiting(false);\n    setForm(initialForm);\n  };\n\n  const updateForm = element => {\n    const newFormdata = update(element, form.formdata, 'posts');\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      formError: false,\n      formdata: newFormdata\n    }));\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    const dataToSubmit = generateData(form.formdata, 'posts');\n    const formIsValid = isFormValid(form.formdata, 'posts');\n\n    if (formIsValid) {\n      setWaiting(true);\n\n      if (edit.active && edit.status === 'create') {\n        createProduct(dataToSubmit);\n      } else {\n        console.log(dataToSubmit);\n        updateProduct(_objectSpread(_objectSpread({}, dataToSubmit), {}, {\n          id: edit.status\n        }));\n      }\n    } else {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        formError: true,\n        formMessage: 'Kiểm tra lại thông tin'\n      }));\n    }\n  };\n\n  const exitForm = e => {\n    e.preventDefault();\n    setEdit({\n      active: false,\n      status: 'none'\n    });\n    setWaiting(false);\n  };\n\n  useEffect(() => {\n    getProductsByAdmin();\n  }, []);\n  useEffect(() => {\n    if (getProductsError) {\n      message.error(getProductsError);\n    }\n  }, [getProductsError]);\n  useEffect(() => {\n    if (deleteProductError) {\n      message.error(deleteProductError);\n    }\n  }, [deleteProductError]);\n  useEffect(() => {\n    if (updatePublishError) {\n      message.error(updatePublishError);\n    }\n  }, [updatePublishError]);\n  useEffect(() => {\n    if (updateAvailableError) {\n      message.error(updateAvailableError);\n    }\n  }, [updateAvailableError]);\n  useEffect(() => {\n    if (updateProductError) {\n      message.error(updateProductError);\n    }\n  }, [updateProductError]);\n  useEffect(() => {\n    if (createProductError) {\n      setWaiting(false);\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        formdata: _objectSpread(_objectSpread({}, form.formdata), {}, {\n          name: _objectSpread(_objectSpread({}, form.formdata.name), {}, {\n            valid: false,\n            validationMessage: 'Tên sản phẩm đã tồn tại'\n          })\n        })\n      }));\n    }\n  }, [createProductError]);\n  useEffect(() => {\n    if (products) {\n      setLoading(false);\n      setWaiting(false);\n      setEdit({\n        active: false,\n        status: 'none'\n      });\n    }\n  }, [products]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: styles.loading\n    }, __jsx(CircularProgress, {\n      size: 50,\n      thickness: 4\n    }));\n  } else if (edit.active) {\n    return __jsx(\"div\", {\n      className: styles.formContainer\n    }, __jsx(\"form\", null, __jsx(\"div\", {\n      className: styles.title,\n      onSubmit: event => submitForm(event)\n    }, edit.status === 'create' ? 'Thêm sản phẩm' : 'Sửa sản phẩm'), __jsx(FormField, {\n      id: 'name',\n      formdata: form.formdata.name,\n      change: e => updateForm(e)\n    }), __jsx(FormField, {\n      id: 'price',\n      formdata: form.formdata.price,\n      change: e => updateForm(e)\n    }), __jsx(FormField, {\n      id: 'image',\n      formdata: form.formdata.image,\n      change: e => updateForm(e)\n    }), __jsx(FormField, {\n      id: 'salePrice',\n      formdata: form.formdata.salePrice,\n      change: e => updateForm(e)\n    }), form.formError && __jsx(\"div\", {\n      className: styles.errorLabel\n    }, form.formMessage), isWaiting && __jsx(\"div\", {\n      className: styles.waiting\n    }, __jsx(CircularProgress, {\n      color: \"secondary\"\n    })), __jsx(\"div\", {\n      className: styles.buttonWrapper\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: styles.button,\n      onClick: event => exitForm(event)\n    }, \"H\\u1EE7y\"), __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: styles.button,\n      onClick: event => submitForm(event),\n      type: \"submit\"\n    }, \"X\\xE1c nh\\u1EADn\"))));\n  } else {\n    return __jsx(\"div\", {\n      className: styles.container\n    }, __jsx(\"div\", {\n      className: styles.topWrapper\n    }, __jsx(TopAdminTable, {\n      handleCreate: handleCreatePost\n    })), __jsx(\"div\", {\n      className: styles.tableWrapper\n    }, __jsx(Table, {\n      columns: columns,\n      dataSource: products,\n      rowKey: record => record._id\n    })));\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.products.productsByAdmin,\n  getProductsError: state.products.getProductsByAdminError,\n  createProductError: state.products.createProductError,\n  deleteProductError: state.products.deleteProductError,\n  updatePublishError: state.products.updatePublishProductError,\n  updateProductError: state.products.updateProductError,\n  updateAvailableError: state.products.updateAvailableProductError\n});\n\nexport default connect(mapStateToProps, {\n  getProductsByAdmin,\n  createProduct,\n  deleteProduct,\n  updatePublish,\n  updateProduct,\n  updateAvailable\n})(AdminProducts);","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/components/AdminProducts/index.tsx"],"names":["React","useEffect","useState","connect","getProductsByAdmin","createProduct","deleteProduct","updatePublish","updateProduct","updateAvailable","CircularProgress","styles","TopAdminTable","Table","Space","Popconfirm","message","Switch","CloseOutlined","CheckOutlined","FormField","Button","update","generateData","isFormValid","currencyFormatter","AdminProducts","products","getProductsError","createProductError","deleteProductError","updatePublishError","updateProductError","updateAvailableError","initialForm","formError","formMessage","formdata","name","element","value","config","type","label","validation","required","valid","touched","showlabel","validationMessage","image","placeholder","price","salePrice","loading","setLoading","edit","setEdit","active","status","form","setForm","isWaiting","setWaiting","columns","title","dataIndex","key","render","doc","format","code","publish","record","check","handleSwitchChange","_id","available","handleSwitchAvailableChange","e","handleEdit","urlTitle","handleDelete","productsArr","Object","values","selectedProduct","find","product","id","handleCreatePost","updateForm","newFormdata","submitForm","preventDefault","dataToSubmit","formIsValid","console","log","exitForm","error","formContainer","event","errorLabel","waiting","buttonWrapper","button","container","topWrapper","tableWrapper","mapStateToProps","state","productsByAdmin","getProductsByAdminError","updatePublishProductError","updateAvailableProductError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getProductsByAdmin,\n  createProduct,\n  deleteProduct,\n  updatePublish,\n  updateProduct,\n  updateAvailable,\n} from 'redux/actions/products';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './AdminPosts.module.scss';\nimport TopAdminTable from '../TopAdminTable';\nimport { Table, Space, Popconfirm, message, Switch } from 'antd';\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\nimport FormField from '../FormField';\nimport Button from '@material-ui/core/Button';\nimport { update, generateData, isFormValid } from 'components/utils/formAction';\n// @ts-ignore\nimport currencyFormatter from 'currency-formatter'\ninterface Props {\n  getProductsByAdmin(): void;\n  products: any;\n  createProduct(data: any): void;\n  deleteProduct(id: any): void;\n  getProductsError: any;\n  createProductError: any;\n  deleteProductError: any;\n  updatePublish(data: any): void;\n  updateProduct(data: any): void;\n  updatePublishError: boolean;\n  updateProductError: boolean;\n  updateAvailableError: boolean;\n  updateAvailable(data: any): void;\n}\n\nfunction AdminProducts({\n  products,\n  getProductsByAdmin,\n  createProduct,\n  deleteProduct,\n  getProductsError,\n  createProductError,\n  deleteProductError,\n  updatePublish,\n  updateProduct,\n  updatePublishError,\n  updateProductError,\n  updateAvailableError,\n  updateAvailable,\n}: Props) {\n  const initialForm = {\n    formError: false,\n    formMessage: '',\n    formdata: {\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'name_input',\n          type: 'text',\n          // placeholder: 'Email',\n          label: 'Tên sản phẩm',\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n      image: {\n        element: 'image',\n        value: '',\n        config: {\n          label: 'Ảnh đại diện',\n          placeholder: '',\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        showlabel: true,\n        touched: true,\n        validationMessage: 'Bạn phải nhập mục này',\n      },\n      price: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'price_input',\n          type: 'number',\n          // placeholder: 'Email',\n          label: 'Giá',\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n      salePrice: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'sale_price_input',\n          type: 'number',\n          // placeholder: 'Email',\n          label: 'Giá khuyến mãi',\n        },\n        validation: {\n          required: false,\n        },\n        valid: true,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n    },\n  };\n\n  const [loading, setLoading] = useState(true);\n  const [edit, setEdit] = useState({\n    active: false,\n    status: 'none',\n  });\n  const [form, setForm] = useState(initialForm);\n  const [isWaiting, setWaiting] = useState(false);\n  const columns = [\n    {\n      title: 'Tên sản phẩm',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Giá',\n      dataIndex: 'price',\n      key: 'price',\n      // @ts-ignore\n      render: (price: number, doc: any) => {\n        if (doc.salePrice) {\n          return currencyFormatter.format(doc.salePrice, {code: 'VND'})\n        } else {\n          return currencyFormatter.format(doc.price, {code: 'VND'})\n        }\n      },\n    },\n    {\n      title: 'Xuất bản',\n      dataIndex: 'publish',\n      key: 'publish',\n      render: (publish: boolean, record: any) => (\n        <Switch\n          defaultChecked={publish}\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          onChange={(check) => handleSwitchChange(check, record._id)}\n        />\n      ),\n    },\n    {\n      title: 'Hết hàng / Có sẵn',\n      dataIndex: 'available',\n      key: 'available',\n      render: (available: boolean, record: any) => (\n        <Switch\n          defaultChecked={available}\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          onChange={(check) => handleSwitchAvailableChange(check, record._id)}\n        />\n      ),\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (record: any) => (\n        <Space size=\"middle\">\n          <a onClick={(e) => handleEdit(e, record.urlTitle)}>Sửa</a>\n          <Popconfirm\n            title=\"Bạn có muốn sản phẩm này?\"\n            onConfirm={() => handleDelete(record._id)}\n            okText=\"Xóa\"\n            cancelText=\"Không\"\n          >\n            <a>Xóa</a>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n\n  // @ts-ignore\n  const handleEdit = (e: any, urlTitle: string) => {\n    const productsArr = Object.values(products);\n    const selectedProduct: any = productsArr.find((product: any) => product.urlTitle === urlTitle);\n    setEdit({ active: true, status: selectedProduct._id });\n    setForm({\n      ...form,\n      formdata: {\n        ...form.formdata,\n        name: {\n          ...form.formdata.name,\n          value: selectedProduct.name,\n          valid: true,\n        },\n        price: {\n          ...form.formdata.price,\n          value: selectedProduct.price,\n          valid: true,\n        },\n        salePrice: {\n          ...form.formdata.salePrice,\n          value: selectedProduct.salePrice,\n          valid: true,\n        },\n        image: {\n          ...form.formdata.image,\n          value: `/api/product/image/${urlTitle}`,\n          valid: true,\n        },\n      },\n    });\n  };\n\n  const handleSwitchChange = (check: boolean, id: string) => {\n    updatePublish({ publish: check, id });\n  };\n\n  const handleSwitchAvailableChange = (check: boolean, id: string) => {\n    updateAvailable({ available: check, id });\n  };\n\n  const handleDelete = (id: string) => {\n    deleteProduct({ id });\n  };\n\n  const handleCreatePost = () => {\n    setEdit({ active: true, status: 'create' });\n    setWaiting(false);\n    setForm(initialForm);\n  };\n\n  const updateForm = (element: any) => {\n    const newFormdata: any = update(element, form.formdata, 'posts');\n    setForm({\n      ...form,\n      formError: false,\n      formdata: newFormdata,\n    });\n  };\n\n  const submitForm = (e: any): void => {\n    e.preventDefault();\n\n    const dataToSubmit = generateData(form.formdata, 'posts');\n    const formIsValid = isFormValid(form.formdata, 'posts');\n\n    if (formIsValid) {\n      setWaiting(true);\n      if (edit.active && edit.status === 'create') {\n        createProduct(dataToSubmit);\n      } else {\n        console.log(dataToSubmit);\n        updateProduct({ ...dataToSubmit, id: edit.status });\n      }\n    } else {\n      setForm({\n        ...form,\n        formError: true,\n        formMessage: 'Kiểm tra lại thông tin',\n      });\n    }\n  };\n\n  const exitForm = (e: any) => {\n    e.preventDefault();\n\n    setEdit({ active: false, status: 'none' });\n    setWaiting(false);\n  };\n\n  useEffect(() => {\n    getProductsByAdmin();\n  }, []);\n\n  useEffect(() => {\n    if (getProductsError) {\n      message.error(getProductsError);\n    }\n  }, [getProductsError]);\n\n  useEffect(() => {\n    if (deleteProductError) {\n      message.error(deleteProductError);\n    }\n  }, [deleteProductError]);\n\n  useEffect(() => {\n    if (updatePublishError) {\n      message.error(updatePublishError);\n    }\n  }, [updatePublishError]);\n\n  useEffect(() => {\n    if (updateAvailableError) {\n      message.error(updateAvailableError);\n    }\n  }, [updateAvailableError]);\n\n  useEffect(() => {\n    if (updateProductError) {\n      message.error(updateProductError);\n    }\n  }, [updateProductError]);\n\n  useEffect(() => {\n    if (createProductError) {\n      setWaiting(false);\n      setForm({\n        ...form,\n        formdata: {\n          ...form.formdata,\n          name: {\n            ...form.formdata.name,\n            valid: false,\n            validationMessage: 'Tên sản phẩm đã tồn tại',\n          },\n        },\n      });\n    }\n  }, [createProductError]);\n\n  useEffect(() => {\n    if (products) {\n      setLoading(false);\n      setWaiting(false);\n      setEdit({ active: false, status: 'none' });\n    }\n  }, [products]);\n\n  if (loading) {\n    return (\n      <div className={styles.loading}>\n        <CircularProgress size={50} thickness={4} />\n      </div>\n    );\n  } else if (edit.active) {\n    return (\n      <div className={styles.formContainer}>\n        <form>\n          <div className={styles.title} onSubmit={(event) => submitForm(event)}>\n            {edit.status === 'create' ? 'Thêm sản phẩm' : 'Sửa sản phẩm'}\n          </div>\n          <FormField id={'name'} formdata={form.formdata.name} change={(e: any) => updateForm(e)} />\n          <FormField id={'price'} formdata={form.formdata.price} change={(e: any) => updateForm(e)} />\n          <FormField id={'image'} formdata={form.formdata.image} change={(e: any) => updateForm(e)} />\n          <FormField id={'salePrice'} formdata={form.formdata.salePrice} change={(e: any) => updateForm(e)} />\n          {form.formError && <div className={styles.errorLabel}>{form.formMessage}</div>}\n          {isWaiting && (\n            <div className={styles.waiting}>\n              <CircularProgress color=\"secondary\" />\n            </div>\n          )}\n          <div className={styles.buttonWrapper}>\n            <Button variant=\"contained\" color=\"primary\" className={styles.button} onClick={(event) => exitForm(event)}>\n              Hủy\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={styles.button}\n              onClick={(event) => submitForm(event)}\n              type=\"submit\"\n            >\n              Xác nhận\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles.container}>\n        <div className={styles.topWrapper}>\n          <TopAdminTable handleCreate={handleCreatePost} />\n        </div>\n        <div className={styles.tableWrapper}>\n          <Table columns={columns} dataSource={products} rowKey={(record) => record._id} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  products: state.products.productsByAdmin,\n  getProductsError: state.products.getProductsByAdminError,\n  createProductError: state.products.createProductError,\n  deleteProductError: state.products.deleteProductError,\n  updatePublishError: state.products.updatePublishProductError,\n  updateProductError: state.products.updateProductError,\n  updateAvailableError: state.products.updateAvailableProductError,\n});\n\nexport default connect(mapStateToProps, {\n  getProductsByAdmin,\n  createProduct,\n  deleteProduct,\n  updatePublish,\n  updateProduct,\n  updateAvailable,\n})(AdminProducts);\n"]},"metadata":{},"sourceType":"module"}