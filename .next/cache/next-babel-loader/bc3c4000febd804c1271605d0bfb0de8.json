{"ast":null,"code":"// @ts-nocheck\nimport axios from 'axios';\nimport baseUrl from 'config/basedUrl';\nimport localStorage from 'local-storage'; // @ts-ignore\n\nconst token = localStorage.get('spn_auth');\nconst header = {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n};\nexport const getUsers = () => {\n  return axios.get(`${baseUrl}/api/users`, header);\n};\nexport const createUserByAdmin = ({\n  email,\n  name,\n  role,\n  password\n}) => {\n  const formData = new FormData();\n  formData.append('email', email);\n  formData.append('name', name);\n  formData.append('password', password);\n  formData.append('role', String(role));\n  return axios.post(`${baseUrl}/api/admin/user`, formData, header);\n};\nexport const deleteUser = ({\n  id\n}) => {\n  return axios.delete(`${baseUrl}/api/user/${id}`, header);\n};\nexport const editUser = ({\n  id,\n  name,\n  email,\n  password,\n  role\n}) => {\n  const formData = new FormData();\n  formData.append('email', email);\n  formData.append('name', name);\n  formData.append('password', password);\n  formData.append('role', String(role));\n  return axios.put(`${baseUrl}/api/user/${id}`, formData, header);\n};\nexport const getSiteCarousel = () => {\n  return axios.get(`${baseUrl}/api/site/carousel`, header);\n};\nexport const getSiteInfo = () => {\n  return axios.get(`${baseUrl}/api/site/info`, header);\n};\nexport const updateSiteCarousel = ({\n  key,\n  data\n}) => {\n  const formData = new FormData();\n  formData.append('key', key);\n  formData.append('image', data);\n  return axios.put(`${baseUrl}/api/site/carousel`, formData, header);\n};\nexport const updateSiteInfo = ({\n  infos\n}) => {\n  return axios.put(`${baseUrl}/api/site/info`, infos, header);\n};","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/redux/api/admins.ts"],"names":["axios","baseUrl","localStorage","token","get","header","headers","getUsers","createUserByAdmin","email","name","role","password","formData","FormData","append","String","post","deleteUser","id","delete","editUser","put","getSiteCarousel","getSiteInfo","updateSiteCarousel","key","data","updateSiteInfo","infos"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport axios from 'axios';\nimport baseUrl from 'config/basedUrl'\nimport localStorage from 'local-storage';\n\n// @ts-ignore\nconst token = localStorage.get('spn_auth')\nconst header = {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n}\n\ninterface User {\n  email: string;\n  name: string;\n  role: number;\n  password: string;\n  id?: string;\n}\n\nexport const getUsers = () => {\n  return axios.get(`${baseUrl}/api/users`, header) ;\n};\n\nexport const createUserByAdmin = ({ email, name, role, password }: User) => {\n  const formData = new FormData();\n  formData.append('email', email);\n  formData.append('name', name);\n  formData.append('password', password);\n  formData.append('role', String(role));\n  return axios.post(`${baseUrl}/api/admin/user`, formData, header);\n};\n\ninterface SelectUser {\n  id: string;\n}\n\nexport const deleteUser = ({ id }: SelectUser) => {\n  return axios.delete(`${baseUrl}/api/user/${id}`, header);\n};\n\nexport const editUser = ({ id, name, email, password, role }: User) => {\n  const formData = new FormData();\n  formData.append('email', email);\n  formData.append('name', name);\n  formData.append('password', password);\n  formData.append('role', String(role));\n  return axios.put(`${baseUrl}/api/user/${id}`, formData, header);\n};\n\nexport const getSiteCarousel = () => {\n  return axios.get(`${baseUrl}/api/site/carousel`, header)\n}\n\nexport const getSiteInfo = () => {\n  return axios.get(`${baseUrl}/api/site/info`, header)\n}\n\nexport const updateSiteCarousel = ({ key, data }: any) => {\n  const formData = new FormData();\n  formData.append('key', key)\n  formData.append('image', data)\n  return axios.put(`${baseUrl}/api/site/carousel`, formData, header)\n}\n\nexport const updateSiteInfo = ({ infos }: any) => {\n  return axios.put(`${baseUrl}/api/site/info`, infos, header)\n}"]},"metadata":{},"sourceType":"module"}