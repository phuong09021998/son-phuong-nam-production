{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getPostsByAdmin),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetPostsByAdminRequest),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createPostByAdmin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreatePostsByAdminRequest),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(deletePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeletePostRequest),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdatePublish),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdatePublishRequest),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdatePostRequest),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdatePostRequest);\n\nimport { takeLatest, takeEvery, take, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/posts';\nimport * as api from '../api/posts';\n\nfunction getPostsByAdmin() {\n  var items;\n  return _regeneratorRuntime.wrap(function getPostsByAdmin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(api.getPostsByAdmin);\n\n        case 3:\n          items = _context.sent;\n          _context.next = 6;\n          return put(actions.getPostsByAdminSuccess({\n            items: items.data.posts\n          }));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(actions.getPostsByAdminError({\n            error: 'Lấy bài viết thất bại'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchGetPostsByAdminRequest() {\n  return _regeneratorRuntime.wrap(function watchGetPostsByAdminRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.Types.GET_POSTS_BY_ADMIN, getPostsByAdmin);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction createPostByAdmin(_ref) {\n  var payload, errorData;\n  return _regeneratorRuntime.wrap(function createPostByAdmin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(api.createPost, payload);\n\n        case 4:\n          _context3.next = 6;\n          return call(getPostsByAdmin);\n\n        case 6:\n          _context3.next = 18;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](1);\n          errorData = _context3.t0.response.data;\n\n          if (!errorData.error.includes('E11000')) {\n            _context3.next = 16;\n            break;\n          }\n\n          _context3.next = 14;\n          return put(actions.createPostError({\n            error: 'Tên bài viết đã tồn tại'\n          }));\n\n        case 14:\n          _context3.next = 18;\n          break;\n\n        case 16:\n          _context3.next = 18;\n          return put(actions.createPostError({\n            error: 'Tạo bài viết thất bại'\n          }));\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 8]]);\n}\n\nfunction watchCreatePostsByAdminRequest() {\n  return _regeneratorRuntime.wrap(function watchCreatePostsByAdminRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actions.Types.CREATE_POST, createPostByAdmin);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction deletePost(payload) {\n  return _regeneratorRuntime.wrap(function deletePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(api.deletePost, payload);\n\n        case 3:\n          _context5.next = 5;\n          return call(getPostsByAdmin);\n\n        case 5:\n          _context5.next = 11;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 11;\n          return put(actions.deletePostError({\n            error: 'Xóa thất bại'\n          }));\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchDeletePostRequest() {\n  var _yield$take, payload;\n\n  return _regeneratorRuntime.wrap(function watchDeletePostRequest$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!true) {\n            _context6.next = 9;\n            break;\n          }\n\n          _context6.next = 3;\n          return take(actions.Types.DELETE_POST);\n\n        case 3:\n          _yield$take = _context6.sent;\n          payload = _yield$take.payload;\n          _context6.next = 7;\n          return call(deletePost, payload);\n\n        case 7:\n          _context6.next = 0;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction handleUpdatePublish(_ref2) {\n  var payload;\n  return _regeneratorRuntime.wrap(function handleUpdatePublish$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context7.prev = 1;\n          _context7.next = 4;\n          return call(api.updatePublish, payload);\n\n        case 4:\n          _context7.next = 6;\n          return call(getPostsByAdmin);\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](1);\n          _context7.next = 12;\n          return put(actions.updatePublishError({\n            error: 'Cập nhật thất bại'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[1, 8]]);\n}\n\nfunction watchUpdatePublishRequest() {\n  return _regeneratorRuntime.wrap(function watchUpdatePublishRequest$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(actions.Types.UPDATE_PUBLISH, handleUpdatePublish);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction handleUpdatePostRequest(_ref3) {\n  var payload;\n  return _regeneratorRuntime.wrap(function handleUpdatePostRequest$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context9.prev = 1;\n          _context9.next = 4;\n          return call(api.updatePost, payload);\n\n        case 4:\n          _context9.next = 6;\n          return call(getPostsByAdmin);\n\n        case 6:\n          _context9.next = 12;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](1);\n          _context9.next = 12;\n          return put(actions.updateError({\n            error: 'Cập nhật thất bại'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[1, 8]]);\n}\n\nfunction watchUpdatePostRequest() {\n  return _regeneratorRuntime.wrap(function watchUpdatePostRequest$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(actions.Types.UPDATE_POST, handleUpdatePostRequest);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nvar postSagas = [fork(watchGetPostsByAdminRequest), fork(watchCreatePostsByAdminRequest), fork(watchDeletePostRequest), fork(watchUpdatePublishRequest), fork(watchUpdatePostRequest)];\nexport default postSagas;","map":null,"metadata":{},"sourceType":"module"}