{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var validate = function validate(element, formdata) {\n  var error = [true, ''];\n\n  if (element.validation.email) {\n    var valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n    var message = \"\".concat(!valid ? 'Email không hợp lệ' : '');\n    error = !valid ? [valid, message] : error;\n  }\n\n  if (element.validation.confirm) {\n    var _valid = element.value.trim() === formdata[element.validation.confirm].value;\n\n    var _message = \"\".concat(!_valid ? 'Mật khẩu nhập lại không chính xác' : '');\n\n    error = !_valid ? [_valid, _message] : error;\n  }\n\n  if (element.validation.password) {\n    var _valid2 = element.value.length >= 6;\n\n    var _message2 = \"\".concat(!_valid2 ? 'Mật khẩu phải lớn hơn 6 kí tự' : '');\n\n    error = !_valid2 ? [_valid2, _message2] : error;\n  }\n\n  if (element.validation.required) {\n    var _valid3;\n\n    if (element.element !== 'image') {\n      _valid3 = element.value.trim() !== '';\n    } else {\n      _valid3 = element.value !== '';\n    }\n\n    var _message3 = \"\".concat(!_valid3 ? 'Bạn phải nhập mục này' : '');\n\n    error = !_valid3 ? [_valid3, _message3] : error;\n  }\n\n  return error;\n}; // @ts-ignore\n\nexport var update = function update(element, formdata, formName) {\n  var newFormdata = _objectSpread({}, formdata);\n\n  var newElement = _objectSpread({}, newFormdata[element.id]);\n\n  if (element.id === 'content') {\n    newElement.value = element.event;\n  } else if (element.id === 'image') {\n    newElement.value = element.event.target.files[0];\n  } else {\n    newElement.value = element.event.target.value;\n  }\n\n  if (element.blur || element.id === 'image' || element.id === 'content' || element.id === 'password') {\n    var validData = validate(newElement, formdata);\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n  }\n\n  newElement.touched = element.blur;\n  newFormdata[element.id] = newElement;\n  return newFormdata;\n}; // @ts-ignore\n\nexport var generateData = function generateData(formdata, formName) {\n  var dataToSubmit = {};\n\n  var setType = function setType(name) {\n    if (name === 'Dự án') {\n      return 'project';\n    } else if (name === 'Dịch vụ') {\n      return 'service';\n    } else {\n      return 'info';\n    }\n  };\n\n  for (var key in formdata) {\n    if (key === 'role') {\n      dataToSubmit[key] = formdata[key].value === 'Quản trị viên' ? 1 : 0;\n    } else if (key === 'type') {\n      dataToSubmit[key] = setType(formdata[key].value);\n    } else if (key === 'image') {\n      if (typeof formdata[key].value === 'object') {\n        dataToSubmit[key] = formdata[key].value;\n      }\n    } else if (key !== 'confirmPassword') {\n      dataToSubmit[key] = formdata[key].value;\n    }\n  }\n\n  return dataToSubmit;\n}; // @ts-ignore\n\nexport var isFormValid = function isFormValid(formdata, formName) {\n  var formIsValid = true;\n\n  for (var key in formdata) {\n    formIsValid = formdata[key].valid && formIsValid;\n  }\n\n  return formIsValid;\n};","map":null,"metadata":{},"sourceType":"module"}