{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getPostsByAdmin } from 'redux/actions/posts';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './AdminPosts.module.scss';\nimport TopAdminTable from '../TopAdminTable';\nimport { Table, Tag, Space, Popconfirm, message, Switch } from 'antd';\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\nimport FormField from '../FormField';\nimport Button from '@material-ui/core/Button';\nimport { update, generateData, isFormValid } from 'components/utils/formAction';\nimport { createPost, deletePost, updatePublish, updatePost } from 'redux/actions/posts';\n\nfunction AdminPosts(_ref) {\n  _s();\n\n  var posts = _ref.posts,\n      getPostsByAdmin = _ref.getPostsByAdmin,\n      createPost = _ref.createPost,\n      deletePost = _ref.deletePost,\n      getPostsError = _ref.getPostsError,\n      createPostError = _ref.createPostError,\n      deletePostError = _ref.deletePostError,\n      updatePublish = _ref.updatePublish,\n      updatePost = _ref.updatePost,\n      updatePublishError = _ref.updatePublishError,\n      updatePostError = _ref.updatePostError;\n  var initialForm = {\n    formError: false,\n    formMessage: '',\n    formdata: {\n      title: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'title_input',\n          type: 'title',\n          // placeholder: 'Email',\n          label: 'Tiêu đề'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      },\n      type: {\n        element: 'select',\n        value: 'Dự án',\n        config: {\n          name: 'type_input',\n          type: 'type',\n          label: 'Thể loại',\n          options: [{\n            value: 'Dự án'\n          }, {\n            value: 'Dịch vụ'\n          }, {\n            value: 'Kiến thức'\n          }]\n        },\n        validation: {\n          required: true\n        },\n        valid: true,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      },\n      image: {\n        element: 'image',\n        value: '',\n        config: {\n          label: 'Ảnh đại diện',\n          placeholder: ''\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        showlabel: true,\n        touched: true,\n        validationMessage: 'Bạn phải nhập mục này'\n      },\n      content: {\n        element: 'rich_text',\n        value: '',\n        config: {\n          name: 'content_input',\n          type: 'content',\n          // placeholder: 'Email',\n          label: 'Nội dung'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      }\n    }\n  };\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState({\n    active: false,\n    status: 'none'\n  }),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var _useState3 = useState(initialForm),\n      form = _useState3[0],\n      setForm = _useState3[1];\n\n  var _useState4 = useState(false),\n      isWaiting = _useState4[0],\n      setWaiting = _useState4[1];\n\n  var columns = [{\n    title: 'Tên bài viết',\n    dataIndex: 'title',\n    key: 'title'\n  }, {\n    title: 'Thể loại',\n    dataIndex: 'type',\n    key: 'type',\n    render: function render(type) {\n      if (type === 'info') {\n        return __jsx(Tag, {\n          color: \"green\"\n        }, \"Ki\\u1EBFn th\\u1EE9c\");\n      } else if (type === 'service') {\n        return __jsx(Tag, {\n          color: \"blue\"\n        }, \"D\\u1ECBch v\\u1EE5\");\n      } else {\n        return __jsx(Tag, {\n          color: \"orange\"\n        }, \"D\\u1EF1 \\xE1n \");\n      }\n    }\n  }, {\n    title: 'Xuất bản',\n    dataIndex: 'publish',\n    key: 'publish',\n    render: function render(publish, record) {\n      return __jsx(Switch, {\n        defaultChecked: publish,\n        checkedChildren: __jsx(CheckOutlined, null),\n        unCheckedChildren: __jsx(CloseOutlined, null),\n        onChange: function onChange(check) {\n          return handleSwitchChange(check, record._id);\n        }\n      });\n    }\n  }, {\n    title: 'Hành động',\n    key: 'action',\n    render: function render(record) {\n      return __jsx(Space, {\n        size: \"middle\"\n      }, __jsx(\"a\", {\n        onClick: function onClick(e) {\n          return handleEdit(e, record.urlTitle);\n        }\n      }, \"S\\u1EEDa\"), __jsx(Popconfirm, {\n        title: \"B\\u1EA1n c\\xF3 mu\\u1ED1n x\\xF3a b\\xE0i vi\\u1EBFt n\\xE0y?\",\n        onConfirm: function onConfirm() {\n          return handleDelete(record._id);\n        },\n        okText: \"X\\xF3a\",\n        cancelText: \"Kh\\xF4ng\"\n      }, __jsx(\"a\", null, \"X\\xF3a\")));\n    }\n  }]; // @ts-ignore\n\n  var handleEdit = function handleEdit(e, urlTitle) {\n    var postsArr = Object.values(posts);\n    var selectedPost = postsArr.find(function (post) {\n      return post.urlTitle === urlTitle;\n    });\n    setEdit({\n      active: true,\n      status: selectedPost._id\n    });\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      formdata: _objectSpread(_objectSpread({}, form.formdata), {}, {\n        title: _objectSpread(_objectSpread({}, form.formdata.title), {}, {\n          value: selectedPost.title,\n          valid: true\n        }),\n        type: _objectSpread(_objectSpread({}, form.formdata.type), {}, {\n          value: setType(selectedPost.type),\n          valid: true\n        }),\n        content: _objectSpread(_objectSpread({}, form.formdata.content), {}, {\n          value: selectedPost.content,\n          valid: true\n        }),\n        image: _objectSpread(_objectSpread({}, form.formdata.image), {}, {\n          value: \"/api/post/image/\".concat(urlTitle),\n          valid: true\n        })\n      })\n    }));\n  };\n\n  var setType = function setType(type) {\n    if (type === 'project') {\n      return 'Dự án';\n    } else if (type === 'service') {\n      return 'Dịch vụ';\n    } else {\n      return 'Kiến thức';\n    }\n  };\n\n  var handleSwitchChange = function handleSwitchChange(check, id) {\n    updatePublish({\n      publish: check,\n      id: id\n    });\n  };\n\n  var handleDelete = function handleDelete(id) {\n    deletePost({\n      id: id\n    });\n  };\n\n  var handleCreatePost = function handleCreatePost() {\n    setEdit({\n      active: true,\n      status: 'create'\n    });\n    setWaiting(false);\n    setForm(initialForm);\n  };\n\n  var updateForm = function updateForm(element) {\n    var newFormdata = update(element, form.formdata, 'posts');\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      formError: false,\n      formdata: newFormdata\n    }));\n  };\n\n  var submitForm = function submitForm(e) {\n    e.preventDefault();\n    var dataToSubmit = generateData(form.formdata, 'posts');\n    var formIsValid = isFormValid(form.formdata, 'posts');\n\n    if (formIsValid) {\n      setWaiting(true);\n\n      if (edit.active && edit.status === 'create') {\n        createPost(dataToSubmit);\n      } else {\n        updatePost(_objectSpread(_objectSpread({}, dataToSubmit), {}, {\n          id: edit.status\n        }));\n      }\n    } else {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        formError: true,\n        formMessage: 'Kiểm tra lại thông tin'\n      }));\n    }\n  };\n\n  var exitForm = function exitForm(e) {\n    e.preventDefault();\n    setEdit({\n      active: false,\n      status: 'none'\n    });\n    setWaiting(false);\n  };\n\n  useEffect(function () {\n    getPostsByAdmin();\n  }, []);\n  useEffect(function () {\n    if (getPostsError) {\n      message.error(getPostsError);\n    }\n  }, [getPostsError]);\n  useEffect(function () {\n    if (deletePostError) {\n      message.error(deletePostError);\n    }\n  }, [deletePostError]);\n  useEffect(function () {\n    if (updatePublishError) {\n      message.error(updatePublishError);\n    }\n  }, [updatePublishError]);\n  useEffect(function () {\n    if (updatePostError) {\n      message.error(updatePostError);\n    }\n  }, [updatePostError]);\n  useEffect(function () {\n    if (createPostError) {\n      setWaiting(false);\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        formdata: _objectSpread(_objectSpread({}, form.formdata), {}, {\n          title: _objectSpread(_objectSpread({}, form.formdata.title), {}, {\n            valid: false,\n            validationMessage: 'Tên bài viết đã tồn tại'\n          })\n        })\n      }));\n    }\n  }, [createPostError]);\n  useEffect(function () {\n    if (posts) {\n      setLoading(false);\n      setWaiting(false);\n      setEdit({\n        active: false,\n        status: 'none'\n      });\n    }\n  }, [posts]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: styles.loading\n    }, __jsx(CircularProgress, {\n      size: 50,\n      thickness: 4\n    }));\n  } else if (edit.active) {\n    return __jsx(\"div\", {\n      className: styles.formContainer\n    }, __jsx(\"form\", null, __jsx(\"div\", {\n      className: styles.title,\n      onSubmit: function onSubmit(event) {\n        return submitForm(event);\n      }\n    }, edit.status === 'create' ? 'Thêm bài viết' : 'Sửa bài viết'), __jsx(FormField, {\n      id: 'title',\n      formdata: form.formdata.title,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), __jsx(FormField, {\n      id: 'type',\n      formdata: form.formdata.type,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), __jsx(FormField, {\n      id: 'image',\n      formdata: form.formdata.image,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), __jsx(FormField, {\n      id: 'content',\n      formdata: form.formdata.content,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), form.formError && __jsx(\"div\", {\n      className: styles.errorLabel\n    }, form.formMessage), isWaiting && __jsx(\"div\", {\n      className: styles.waiting\n    }, __jsx(CircularProgress, {\n      color: \"secondary\"\n    })), __jsx(\"div\", {\n      className: styles.buttonWrapper\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: styles.button,\n      onClick: function onClick(event) {\n        return exitForm(event);\n      }\n    }, \"H\\u1EE7y\"), __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: styles.button,\n      onClick: function onClick(event) {\n        return submitForm(event);\n      },\n      type: \"submit\"\n    }, \"X\\xE1c nh\\u1EADn\"))));\n  } else {\n    return __jsx(\"div\", {\n      className: styles.container\n    }, __jsx(\"div\", {\n      className: styles.topWrapper\n    }, __jsx(TopAdminTable, {\n      handleCreate: handleCreatePost\n    })), __jsx(\"div\", {\n      className: styles.tableWrapper\n    }, __jsx(Table, {\n      columns: columns,\n      dataSource: posts,\n      rowKey: function rowKey(record) {\n        return record._id;\n      }\n    })));\n  }\n}\n\n_s(AdminPosts, \"uwhNvD9E9lO+W7JHjPkRoKCLk+8=\");\n\n_c = AdminPosts;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.postsByAdmin,\n    getPostsError: state.posts.getPostsByAdminError,\n    createPostError: state.posts.createPostError,\n    deletePostError: state.posts.deletePostError,\n    updatePublishError: state.posts.updatePublishError,\n    updatePostError: state.posts.updatePostError\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPostsByAdmin: getPostsByAdmin,\n  createPost: createPost,\n  deletePost: deletePost,\n  updatePublish: updatePublish,\n  updatePost: updatePost\n})(AdminPosts);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPosts\");","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/components/AdminPosts/index.tsx"],"names":["React","useEffect","useState","connect","getPostsByAdmin","CircularProgress","styles","TopAdminTable","Table","Tag","Space","Popconfirm","message","Switch","CloseOutlined","CheckOutlined","FormField","Button","update","generateData","isFormValid","createPost","deletePost","updatePublish","updatePost","AdminPosts","posts","getPostsError","createPostError","deletePostError","updatePublishError","updatePostError","initialForm","formError","formMessage","formdata","title","element","value","config","name","type","label","validation","required","valid","touched","showlabel","validationMessage","options","image","placeholder","content","loading","setLoading","active","status","edit","setEdit","form","setForm","isWaiting","setWaiting","columns","dataIndex","key","render","publish","record","check","handleSwitchChange","_id","e","handleEdit","urlTitle","handleDelete","postsArr","Object","values","selectedPost","find","post","setType","id","handleCreatePost","updateForm","newFormdata","submitForm","preventDefault","dataToSubmit","formIsValid","exitForm","error","formContainer","event","errorLabel","waiting","buttonWrapper","button","container","topWrapper","tableWrapper","mapStateToProps","state","postsByAdmin","getPostsByAdminError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getPostsByAdmin } from 'redux/actions/posts';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './AdminPosts.module.scss';\nimport TopAdminTable from '../TopAdminTable';\nimport { Table, Tag, Space, Popconfirm, message, Switch } from 'antd';\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\nimport FormField from '../FormField';\nimport Button from '@material-ui/core/Button';\nimport { update, generateData, isFormValid } from 'components/utils/formAction';\nimport { createPost, deletePost, updatePublish, updatePost } from 'redux/actions/posts';\ninterface Props {\n  getPostsByAdmin(): void;\n  posts: any;\n  createPost(data: any): void;\n  deletePost(id: any): void;\n  getPostsError: any;\n  createPostError: any;\n  deletePostError: any;\n  updatePublish(data: any): void;\n  updatePost(data: any): void;\n  updatePublishError: boolean;\n  updatePostError: boolean;\n}\n\nfunction AdminPosts({\n  posts,\n  getPostsByAdmin,\n  createPost,\n  deletePost,\n  getPostsError,\n  createPostError,\n  deletePostError,\n  updatePublish,\n  updatePost,\n  updatePublishError,\n  updatePostError,\n}: Props) {\n  const initialForm = {\n    formError: false,\n    formMessage: '',\n    formdata: {\n      title: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'title_input',\n          type: 'title',\n          // placeholder: 'Email',\n          label: 'Tiêu đề',\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n      type: {\n        element: 'select',\n        value: 'Dự án',\n        config: {\n          name: 'type_input',\n          type: 'type',\n          label: 'Thể loại',\n          options: [{ value: 'Dự án' }, { value: 'Dịch vụ' }, { value: 'Kiến thức' }],\n        },\n        validation: {\n          required: true,\n        },\n        valid: true,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n      image: {\n        element: 'image',\n        value: '',\n        config: {\n          label: 'Ảnh đại diện',\n          placeholder: '',\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        showlabel: true,\n        touched: true,\n        validationMessage: 'Bạn phải nhập mục này',\n      },\n      content: {\n        element: 'rich_text',\n        value: '',\n        config: {\n          name: 'content_input',\n          type: 'content',\n          // placeholder: 'Email',\n          label: 'Nội dung',\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n    },\n  };\n\n  const [loading, setLoading] = useState(true);\n  const [edit, setEdit] = useState({\n    active: false,\n    status: 'none',\n  });\n  const [form, setForm] = useState(initialForm);\n  const [isWaiting, setWaiting] = useState(false);\n\n  const columns = [\n    {\n      title: 'Tên bài viết',\n      dataIndex: 'title',\n      key: 'title',\n    },\n    {\n      title: 'Thể loại',\n      dataIndex: 'type',\n      key: 'type',\n      render: (type: string) => {\n        if (type === 'info') {\n          return <Tag color=\"green\">Kiến thức</Tag>;\n        } else if (type === 'service') {\n          return <Tag color=\"blue\">Dịch vụ</Tag>;\n        } else {\n          return <Tag color=\"orange\">Dự án </Tag>;\n        }\n      },\n    },\n    {\n      title: 'Xuất bản',\n      dataIndex: 'publish',\n      key: 'publish',\n      render: (publish: boolean, record: any) => (\n        <Switch\n          defaultChecked={publish}\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          onChange={(check) => handleSwitchChange(check, record._id)}\n        />\n      ),\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (record: any) => (\n        <Space size=\"middle\">\n          <a onClick={(e) => handleEdit(e, record.urlTitle)}>Sửa</a>\n          <Popconfirm\n            title=\"Bạn có muốn xóa bài viết này?\"\n            onConfirm={() => handleDelete(record._id)}\n            okText=\"Xóa\"\n            cancelText=\"Không\"\n          >\n            <a>Xóa</a>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  // @ts-ignore\n  const handleEdit = (e: any, urlTitle: string) => {\n    const postsArr = Object.values(posts);\n    const selectedPost: any = postsArr.find((post: any) => post.urlTitle === urlTitle);\n    setEdit({ active: true, status: selectedPost._id });\n    setForm({\n      ...form,\n      formdata: {\n        ...form.formdata,\n        title: {\n          ...form.formdata.title,\n          value: selectedPost.title,\n          valid: true,\n        },\n        type: {\n          ...form.formdata.type,\n          value: setType(selectedPost.type),\n          valid: true,\n        },\n        content: {\n          ...form.formdata.content,\n          value: selectedPost.content,\n          valid: true,\n        },\n        image: {\n          ...form.formdata.image,\n          value: `/api/post/image/${urlTitle}`,\n          valid: true,\n        },\n      },\n    });\n  };\n\n  const setType = (type: string) => {\n    if (type === 'project') {\n      return 'Dự án';\n    } else if (type === 'service') {\n      return 'Dịch vụ';\n    } else {\n      return 'Kiến thức';\n    }\n  };\n\n  const handleSwitchChange = (check: boolean, id: string) => {\n    updatePublish({ publish: check, id });\n  };\n\n  const handleDelete = (id: string) => {\n    deletePost({ id });\n  };\n\n  const handleCreatePost = () => {\n    setEdit({ active: true, status: 'create' });\n    setWaiting(false);\n    setForm(initialForm);\n  };\n\n  const updateForm = (element: any) => {\n    const newFormdata: any = update(element, form.formdata, 'posts');\n    setForm({\n      ...form,\n      formError: false,\n      formdata: newFormdata,\n    });\n  };\n\n  const submitForm = (e: any): void => {\n    e.preventDefault();\n\n    const dataToSubmit = generateData(form.formdata, 'posts');\n    const formIsValid = isFormValid(form.formdata, 'posts');\n\n    if (formIsValid) {\n      setWaiting(true);\n      if (edit.active && edit.status === 'create') {\n        createPost(dataToSubmit);\n      } else {\n        updatePost({ ...dataToSubmit, id: edit.status });\n      }\n    } else {\n      setForm({\n        ...form,\n        formError: true,\n        formMessage: 'Kiểm tra lại thông tin',\n      });\n    }\n  };\n\n  const exitForm = (e: any) => {\n    e.preventDefault();\n\n    setEdit({ active: false, status: 'none' });\n    setWaiting(false);\n  };\n\n  useEffect(() => {\n    getPostsByAdmin();\n  }, []);\n\n  useEffect(() => {\n    if (getPostsError) {\n      message.error(getPostsError);\n    }\n  }, [getPostsError]);\n\n  useEffect(() => {\n    if (deletePostError) {\n      message.error(deletePostError);\n    }\n  }, [deletePostError]);\n\n  useEffect(() => {\n    if (updatePublishError) {\n      message.error(updatePublishError);\n    }\n  }, [updatePublishError]);\n\n  useEffect(() => {\n    if (updatePostError) {\n      message.error(updatePostError);\n    }\n  }, [updatePostError]);\n\n  useEffect(() => {\n    if (createPostError) {\n      setWaiting(false);\n      setForm({\n        ...form,\n        formdata: {\n          ...form.formdata,\n          title: {\n            ...form.formdata.title,\n            valid: false,\n            validationMessage: 'Tên bài viết đã tồn tại',\n          },\n        },\n      });\n    }\n  }, [createPostError]);\n\n  useEffect(() => {\n    if (posts) {\n      setLoading(false);\n      setWaiting(false);\n      setEdit({ active: false, status: 'none' });\n    }\n  }, [posts]);\n\n  if (loading) {\n    return (\n      <div className={styles.loading}>\n        <CircularProgress size={50} thickness={4} />\n      </div>\n    );\n  } else if (edit.active) {\n    return (\n      <div className={styles.formContainer}>\n        <form>\n          <div className={styles.title} onSubmit={(event) => submitForm(event)}>\n            {edit.status === 'create' ? 'Thêm bài viết' : 'Sửa bài viết'}\n          </div>\n          <FormField id={'title'} formdata={form.formdata.title} change={(e: any) => updateForm(e)} />\n          <FormField id={'type'} formdata={form.formdata.type} change={(e: any) => updateForm(e)} />\n          <FormField id={'image'} formdata={form.formdata.image} change={(e: any) => updateForm(e)} />\n          <FormField id={'content'} formdata={form.formdata.content} change={(e: any) => updateForm(e)} />\n          {form.formError && <div className={styles.errorLabel}>{form.formMessage}</div>}\n          {isWaiting && (\n            <div className={styles.waiting}>\n              <CircularProgress color=\"secondary\" />\n            </div>\n          )}\n          <div className={styles.buttonWrapper}>\n            <Button variant=\"contained\" color=\"primary\" className={styles.button} onClick={(event) => exitForm(event)}>\n              Hủy\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={styles.button}\n              onClick={(event) => submitForm(event)}\n              type=\"submit\"\n            >\n              Xác nhận\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles.container}>\n        <div className={styles.topWrapper}>\n          <TopAdminTable handleCreate={handleCreatePost} />\n        </div>\n        <div className={styles.tableWrapper}>\n          <Table columns={columns} dataSource={posts} rowKey={(record) => record._id} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  posts: state.posts.postsByAdmin,\n  getPostsError: state.posts.getPostsByAdminError,\n  createPostError: state.posts.createPostError,\n  deletePostError: state.posts.deletePostError,\n  updatePublishError: state.posts.updatePublishError,\n  updatePostError: state.posts.updatePostError,\n});\n\nexport default connect(mapStateToProps, { getPostsByAdmin, createPost, deletePost, updatePublish, updatePost })(\n  AdminPosts,\n);\n"]},"metadata":{},"sourceType":"module"}