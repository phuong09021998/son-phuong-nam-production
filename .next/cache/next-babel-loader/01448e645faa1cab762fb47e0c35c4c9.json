{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getProductsByAdmin),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetProductsByAdminRequest),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createProductByAdmin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreateProductByAdminRequest),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(deleteProduct),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeleteProductRequest),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdatePublishProduct),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdatePublishProductRequest),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdateAvailableProduct),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdateAvailableProductRequest),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdateProductRequest),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdateProductRequest);\n\nimport { takeLatest, takeEvery, take, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/products';\nimport * as api from '../api/products';\n\nfunction getProductsByAdmin() {\n  var items;\n  return _regeneratorRuntime.wrap(function getProductsByAdmin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(api.getProductsByAdmin);\n\n        case 3:\n          items = _context.sent;\n          _context.next = 6;\n          return put(actions.getProductsByAdminSuccess({\n            items: items.data.products\n          }));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(actions.getProductsByAdminError({\n            error: 'Lấy sản phẩm thất bại'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchGetProductsByAdminRequest() {\n  return _regeneratorRuntime.wrap(function watchGetProductsByAdminRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.Types.GET_PRODUCTS_BY_ADMIN, getProductsByAdmin);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction createProductByAdmin(_ref) {\n  var payload, errorData;\n  return _regeneratorRuntime.wrap(function createProductByAdmin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(api.createProduct, payload);\n\n        case 4:\n          _context3.next = 6;\n          return call(getProductsByAdmin);\n\n        case 6:\n          _context3.next = 18;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](1);\n          errorData = _context3.t0.response.data;\n\n          if (!errorData.error.includes('E11000')) {\n            _context3.next = 16;\n            break;\n          }\n\n          _context3.next = 14;\n          return put(actions.createProductError({\n            error: 'Tên sản phẩm đã tồn tại'\n          }));\n\n        case 14:\n          _context3.next = 18;\n          break;\n\n        case 16:\n          _context3.next = 18;\n          return put(actions.createProductError({\n            error: 'Tạo sản phẩm thất bại'\n          }));\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 8]]);\n}\n\nfunction watchCreateProductByAdminRequest() {\n  return _regeneratorRuntime.wrap(function watchCreateProductByAdminRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actions.Types.CREATE_PRODUCT, createProductByAdmin);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction deleteProduct(payload) {\n  return _regeneratorRuntime.wrap(function deleteProduct$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(api.deleteProduct, payload);\n\n        case 3:\n          _context5.next = 5;\n          return call(getProductsByAdmin);\n\n        case 5:\n          _context5.next = 11;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 11;\n          return put(actions.deleteProductError({\n            error: 'Xóa thất bại'\n          }));\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchDeleteProductRequest() {\n  var _yield$take, payload;\n\n  return _regeneratorRuntime.wrap(function watchDeleteProductRequest$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!true) {\n            _context6.next = 9;\n            break;\n          }\n\n          _context6.next = 3;\n          return take(actions.Types.DELETE_PRODUCT);\n\n        case 3:\n          _yield$take = _context6.sent;\n          payload = _yield$take.payload;\n          _context6.next = 7;\n          return call(deleteProduct, payload);\n\n        case 7:\n          _context6.next = 0;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction handleUpdatePublishProduct(_ref2) {\n  var payload;\n  return _regeneratorRuntime.wrap(function handleUpdatePublishProduct$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context7.prev = 1;\n          _context7.next = 4;\n          return call(api.updatePublishProduct, payload);\n\n        case 4:\n          _context7.next = 6;\n          return call(getProductsByAdmin);\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](1);\n          _context7.next = 12;\n          return put(actions.updatePublishProductError({\n            error: 'Cập nhật thất bại'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[1, 8]]);\n}\n\nfunction watchUpdatePublishProductRequest() {\n  return _regeneratorRuntime.wrap(function watchUpdatePublishProductRequest$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(actions.Types.UPDATE_PUBLISH_PRODUCT, handleUpdatePublishProduct);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction handleUpdateAvailableProduct(_ref3) {\n  var payload;\n  return _regeneratorRuntime.wrap(function handleUpdateAvailableProduct$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context9.prev = 1;\n          _context9.next = 4;\n          return call(api.updateAvailableProduct, payload);\n\n        case 4:\n          _context9.next = 6;\n          return call(getProductsByAdmin);\n\n        case 6:\n          _context9.next = 12;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](1);\n          _context9.next = 12;\n          return put(actions.updateAvailableProductError({\n            error: 'Cập nhật thất bại'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[1, 8]]);\n}\n\nfunction watchUpdateAvailableProductRequest() {\n  return _regeneratorRuntime.wrap(function watchUpdateAvailableProductRequest$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(actions.Types.UPDATE_AVAILABLE, handleUpdateAvailableProduct);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction handleUpdateProductRequest(_ref4) {\n  var payload;\n  return _regeneratorRuntime.wrap(function handleUpdateProductRequest$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context11.prev = 1;\n          _context11.next = 4;\n          return call(api.updateProduct, payload);\n\n        case 4:\n          _context11.next = 6;\n          return call(getProductsByAdmin);\n\n        case 6:\n          _context11.next = 12;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](1);\n          _context11.next = 12;\n          return put(actions.updateProductError({\n            error: 'Cập nhật thất bại'\n          }));\n\n        case 12:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[1, 8]]);\n}\n\nfunction watchUpdateProductRequest() {\n  return _regeneratorRuntime.wrap(function watchUpdateProductRequest$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(actions.Types.UPDATE_PRODUCT, handleUpdateProductRequest);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nvar productSagas = [fork(watchGetProductsByAdminRequest), fork(watchCreateProductByAdminRequest), fork(watchDeleteProductRequest), fork(watchUpdatePublishProductRequest), fork(watchUpdateAvailableProductRequest), fork(watchUpdateProductRequest)];\nexport default productSagas;","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/redux/sagas/products.ts"],"names":["getProductsByAdmin","watchGetProductsByAdminRequest","createProductByAdmin","watchCreateProductByAdminRequest","deleteProduct","watchDeleteProductRequest","handleUpdatePublishProduct","watchUpdatePublishProductRequest","handleUpdateAvailableProduct","watchUpdateAvailableProductRequest","handleUpdateProductRequest","watchUpdateProductRequest","takeLatest","takeEvery","take","call","put","fork","actions","api","items","getProductsByAdminSuccess","data","products","getProductsByAdminError","error","Types","GET_PRODUCTS_BY_ADMIN","payload","createProduct","errorData","response","includes","createProductError","CREATE_PRODUCT","deleteProductError","DELETE_PRODUCT","updatePublishProduct","updatePublishProductError","UPDATE_PUBLISH_PRODUCT","updateAvailableProduct","updateAvailableProductError","UPDATE_AVAILABLE","updateProduct","updateProductError","UPDATE_PRODUCT","productSagas"],"mappings":"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","sourcesContent":["import { takeLatest, takeEvery, take, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/products';\nimport * as api from '../api/products';\n\nfunction* getProductsByAdmin() {\n  try {\n    const items = yield call(api.getProductsByAdmin);\n    // console.log(items);\n    yield put(actions.getProductsByAdminSuccess({ items: items.data.products }));\n  } catch (error) {\n    yield put(actions.getProductsByAdminError({ error: 'Lấy sản phẩm thất bại' }));\n  }\n}\n\nfunction* watchGetProductsByAdminRequest() {\n  yield takeEvery(actions.Types.GET_PRODUCTS_BY_ADMIN, getProductsByAdmin);\n}\n\nfunction* createProductByAdmin({ payload }: any) {\n  try {\n    yield call(api.createProduct, payload);\n    yield call(getProductsByAdmin);\n  } catch (error) {\n    const errorData = error.response.data;\n    if (errorData.error.includes('E11000')) {\n      yield put(actions.createProductError({ error: 'Tên sản phẩm đã tồn tại' }));\n    } else {\n      yield put(actions.createProductError({ error: 'Tạo sản phẩm thất bại' }));\n    }\n  }\n}\n\nfunction* watchCreateProductByAdminRequest() {\n  yield takeLatest(actions.Types.CREATE_PRODUCT, createProductByAdmin);\n}\n\nfunction* deleteProduct(payload: any) {\n  try {\n    yield call(api.deleteProduct, payload);\n    yield call(getProductsByAdmin);\n  } catch (e) {\n    yield put(actions.deleteProductError({ error: 'Xóa thất bại' }));\n  }\n}\n\nfunction* watchDeleteProductRequest() {\n  while (true) {\n    const { payload } = yield take(actions.Types.DELETE_PRODUCT);\n    yield call(deleteProduct, payload);\n  }\n}\n\nfunction* handleUpdatePublishProduct({ payload }: any) {\n  try {\n    yield call(api.updatePublishProduct, payload);\n    yield call(getProductsByAdmin);\n  } catch (error) {\n    yield put(actions.updatePublishProductError({ error: 'Cập nhật thất bại' }));\n  }\n}\n\nfunction* watchUpdatePublishProductRequest() {\n  yield takeLatest(actions.Types.UPDATE_PUBLISH_PRODUCT, handleUpdatePublishProduct);\n}\n\nfunction* handleUpdateAvailableProduct({ payload }: any) {\n  try {\n    yield call(api.updateAvailableProduct, payload);\n    yield call(getProductsByAdmin);\n  } catch (error) {\n    yield put(actions.updateAvailableProductError({ error: 'Cập nhật thất bại' }));\n  }\n}\n\nfunction* watchUpdateAvailableProductRequest() {\n  yield takeLatest(actions.Types.UPDATE_AVAILABLE, handleUpdateAvailableProduct);\n}\n\nfunction* handleUpdateProductRequest({ payload }: any) {\n  try {\n    yield call(api.updateProduct, payload);\n    yield call(getProductsByAdmin);\n  } catch (error) {\n    yield put(actions.updateProductError({ error: 'Cập nhật thất bại' }));\n  }\n}\n\nfunction* watchUpdateProductRequest() {\n  yield takeLatest(actions.Types.UPDATE_PRODUCT, handleUpdateProductRequest);\n}\n\nconst productSagas = [\n  fork(watchGetProductsByAdminRequest),\n  fork(watchCreateProductByAdminRequest),\n  fork(watchDeleteProductRequest),\n  fork(watchUpdatePublishProductRequest),\n  fork(watchUpdateAvailableProductRequest),\n  fork(watchUpdateProductRequest),\n];\n\nexport default productSagas;\n"]},"metadata":{},"sourceType":"module"}