{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './AdminUser.module.scss';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Table, Tag, Space, Popconfirm, message } from 'antd';\nimport TopAdminTable from '../TopAdminTable';\nimport Modal from 'react-modal';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport FormField from '../FormField';\nimport { update, generateData, isFormValid } from 'components/utils/formAction';\nimport Button from '@material-ui/core/Button';\nimport { createUserByAdmin, editUser, deleteUser, getUsers } from 'redux/actions/admins';\nModal.setAppElement('body');\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '25rem'\n  }\n};\n\nfunction AdminUsers(_ref) {\n  _s();\n\n  var getUsers = _ref.getUsers,\n      users = _ref.users,\n      createUserByAdmin = _ref.createUserByAdmin,\n      createUserError = _ref.createUserError,\n      deleteUser = _ref.deleteUser,\n      deleteUserError = _ref.deleteUserError,\n      editUser = _ref.editUser,\n      editUserError = _ref.editUserError,\n      getUsersError = _ref.getUsersError;\n  var initialForm = {\n    formError: false,\n    formMessage: '',\n    formdata: {\n      email: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'email_input',\n          type: 'email',\n          // placeholder: 'Email',\n          label: 'Email'\n        },\n        validation: {\n          required: true,\n          email: true\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      },\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'name_input',\n          type: 'name',\n          label: 'Tên'\n        },\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      },\n      role: {\n        element: 'select',\n        value: 'Quản trị viên',\n        config: {\n          name: 'role_input',\n          type: 'name',\n          label: 'Vai trò',\n          options: [{\n            value: 'Người dùng'\n          }, {\n            value: 'Quản trị viên'\n          }]\n        },\n        validation: {\n          required: true\n        },\n        valid: true,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      },\n      password: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'password_input',\n          type: 'password',\n          label: 'Mật khẩu'\n        },\n        validation: {\n          required: true,\n          password: true\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      },\n      confirmPassword: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'confirm_password_input',\n          type: 'password',\n          // placeholder: 'Mật khẩu',\n          label: 'Nhập lại mật khẩu'\n        },\n        validation: {\n          required: true,\n          confirm: 'password'\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: ''\n      }\n    }\n  };\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      openModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var _useState3 = useState(initialForm),\n      form = _useState3[0],\n      setForm = _useState3[1];\n\n  var _useState4 = useState(false),\n      isWaiting = _useState4[0],\n      setWaiting = _useState4[1];\n\n  var _useState5 = useState({\n    active: false,\n    id: 'none'\n  }),\n      edit = _useState5[0],\n      setEdit = _useState5[1];\n\n  var columns = [{\n    title: 'Tên',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email'\n  }, {\n    title: 'Vai trò',\n    dataIndex: 'role',\n    key: 'role',\n    render: function render(role) {\n      if (role === 2) {\n        return __jsx(Tag, {\n          color: \"red\"\n        }, \"Ch\\u1EE7 s\\u1EDF h\\u1EEFu\");\n      } else if (role === 1) {\n        return __jsx(Tag, {\n          color: \"orange\"\n        }, \"Qu\\u1EA3n tr\\u1ECB vi\\xEAn\");\n      } else {\n        return __jsx(Tag, {\n          color: \"green\"\n        }, \"Ngu\\u1EDDi d\\xF9ng\");\n      }\n    }\n  }, {\n    title: 'Hành động',\n    key: 'action',\n    render: function render(record) {\n      return __jsx(Space, {\n        size: \"middle\"\n      }, record.role !== 2 && __jsx(\"a\", {\n        onClick: function onClick() {\n          return handleEditUser(record._id);\n        }\n      }, \"S\\u1EEDa\"), record.role !== 2 && __jsx(Popconfirm, {\n        title: \"B\\u1EA1n c\\xF3 mu\\u1ED1n x\\xF3a ng\\u01B0\\u1EDDi d\\xF9ng n\\xE0y?\",\n        onConfirm: function onConfirm() {\n          return confirm(record._id);\n        },\n        okText: \"X\\xF3a\",\n        cancelText: \"Kh\\xF4ng\"\n      }, __jsx(\"a\", null, \"X\\xF3a\")));\n    }\n  }];\n\n  function confirm(id) {\n    deleteUser({\n      id: id\n    });\n  }\n\n  var selectUserRole = function selectUserRole(role) {\n    if (role === 0) {\n      return 'Người dùng';\n    } else if (role === 1) {\n      return 'Quản trị viên';\n    } else {\n      return 'Chủ sở hữu';\n    }\n  };\n\n  var handleEditUser = function handleEditUser(id) {\n    var usersArr = Object.values(users);\n    var selectedUser = usersArr.find(function (user) {\n      return user._id === id;\n    });\n    setEdit({\n      active: true,\n      id: selectedUser._id\n    });\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      formdata: _objectSpread(_objectSpread({}, form.formdata), {}, {\n        email: _objectSpread(_objectSpread({}, form.formdata.email), {}, {\n          value: selectedUser.email,\n          valid: true\n        }),\n        name: _objectSpread(_objectSpread({}, form.formdata.name), {}, {\n          value: selectedUser.name,\n          valid: true\n        }),\n        role: _objectSpread(_objectSpread({}, form.formdata.role), {}, {\n          value: selectUserRole(selectedUser.role),\n          valid: true\n        }),\n        password: _objectSpread(_objectSpread({}, form.formdata.password), {}, {\n          valid: true\n        })\n      })\n    }));\n    setOpenModal(true);\n  };\n\n  var handleCreate = function handleCreate() {\n    setEdit({\n      active: false,\n      id: 'none'\n    });\n    setForm(initialForm);\n    setOpenModal(true);\n  };\n\n  var closeModal = function closeModal() {\n    setOpenModal(false);\n    setForm(initialForm);\n  };\n\n  var updateForm = function updateForm(element) {\n    var newFormdata = update(element, form.formdata, 'admin_register');\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      formError: false,\n      formdata: newFormdata\n    }));\n  };\n\n  var submitForm = function submitForm(e) {\n    e.preventDefault();\n    var dataToSubmit = generateData(form.formdata, 'admin_register');\n    var formIsValid = isFormValid(form.formdata, 'admin_register');\n\n    if (formIsValid) {\n      if (edit.active) {\n        editUser({\n          id: edit.id,\n          fields: dataToSubmit\n        });\n      } else {\n        createUserByAdmin(dataToSubmit);\n      }\n\n      setWaiting(true);\n    } else {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        formError: true,\n        formMessage: 'Kiểm tra lại thông tin'\n      }));\n    }\n  };\n\n  useEffect(function () {\n    getUsers();\n  }, []);\n  useEffect(function () {\n    if (deleteUserError) {\n      message.error('Xóa thất bại');\n    }\n\n    if (editUserError) {\n      message.error('Sửa thất bại');\n    }\n\n    if (getUsersError) {\n      message.error('Lấy người dùng thất bại');\n    }\n  }, [deleteUserError, editUserError, getUsersError]);\n  useEffect(function () {\n    if (users !== undefined) {\n      setLoading(false);\n      setWaiting(false);\n      setOpenModal(false);\n    }\n  }, [users]);\n  useEffect(function () {\n    if (createUserError === 'Email đã tồn tại') {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        formdata: _objectSpread(_objectSpread({}, form.formdata), {}, {\n          email: _objectSpread(_objectSpread({}, form.formdata.email), {}, {\n            valid: false,\n            validationMessage: createUserError\n          })\n        })\n      }));\n      setWaiting(false);\n    } else {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        formError: true,\n        formMessage: createUserError\n      }));\n    }\n  }, [createUserError]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: styles.loading\n    }, __jsx(CircularProgress, {\n      size: 50,\n      thickness: 4\n    }));\n  } else {\n    var usersArr = Object.values(users);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: styles.tableWrapper\n    }, __jsx(\"div\", {\n      className: styles.topWrapper\n    }, __jsx(TopAdminTable, {\n      handleCreate: handleCreate\n    })), __jsx(\"div\", {\n      className: styles.table\n    }, __jsx(Table, {\n      columns: columns,\n      dataSource: usersArr,\n      rowKey: function rowKey(record) {\n        return record._id;\n      }\n    }))), __jsx(Modal, {\n      isOpen: openModal,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      shouldCloseOnOverlayClick: false\n    }, __jsx(\"div\", {\n      className: styles.modalTitle\n    }, edit.active ? 'Sửa người dùng' : 'Thêm người dùng'), __jsx(\"form\", {\n      className: styles.form,\n      onSubmit: function onSubmit(event) {\n        return submitForm(event);\n      }\n    }, __jsx(FormField, {\n      id: 'email',\n      formdata: form.formdata.email,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), __jsx(FormField, {\n      id: 'name',\n      formdata: form.formdata.name,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), __jsx(FormField, {\n      id: 'role',\n      formdata: form.formdata.role,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), __jsx(FormField, {\n      id: 'password',\n      formdata: form.formdata.password,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), __jsx(FormField, {\n      id: 'confirmPassword',\n      formdata: form.formdata.confirmPassword,\n      change: function change(e) {\n        return updateForm(e);\n      }\n    }), form.formError && __jsx(\"div\", {\n      className: styles.errorLabel\n    }, form.formMessage), isWaiting && __jsx(\"div\", {\n      className: styles.waiting\n    }, __jsx(CircularProgress, {\n      color: \"secondary\"\n    })), __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: styles.button,\n      onClick: function onClick(event) {\n        return submitForm(event);\n      }\n    }, edit.active ? 'Sửa' : 'Đăng ký')), __jsx(\"div\", {\n      className: styles.close\n    }, __jsx(CancelIcon, {\n      color: \"secondary\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: closeModal\n    }))));\n  }\n}\n\n_s(AdminUsers, \"iRoweC4KGmj49fygAR84xwbfLxs=\");\n\n_c = AdminUsers;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.admins.data,\n    createUserError: state.admins.createUserError,\n    deleteUserError: state.admins.deleteUserError,\n    editUserError: state.admins.editUserError,\n    getUsersError: state.admins.getUsersError\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUsers: getUsers,\n  createUserByAdmin: createUserByAdmin,\n  deleteUser: deleteUser,\n  editUser: editUser\n})(AdminUsers);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUsers\");","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/components/AdminUsers/index.tsx"],"names":["React","useEffect","useState","connect","styles","CircularProgress","Table","Tag","Space","Popconfirm","message","TopAdminTable","Modal","CancelIcon","FormField","update","generateData","isFormValid","Button","createUserByAdmin","editUser","deleteUser","getUsers","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","width","AdminUsers","users","createUserError","deleteUserError","editUserError","getUsersError","initialForm","formError","formMessage","formdata","email","element","value","config","name","type","label","validation","required","valid","touched","showlabel","validationMessage","role","options","password","confirmPassword","confirm","loading","setLoading","openModal","setOpenModal","form","setForm","isWaiting","setWaiting","active","id","edit","setEdit","columns","title","dataIndex","key","render","record","handleEditUser","_id","selectUserRole","usersArr","Object","values","selectedUser","find","user","handleCreate","closeModal","updateForm","newFormdata","submitForm","e","preventDefault","dataToSubmit","formIsValid","fields","error","undefined","tableWrapper","topWrapper","table","modalTitle","event","errorLabel","waiting","button","close","cursor","mapStateToProps","state","admins","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './AdminUser.module.scss';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Table, Tag, Space, Popconfirm, message } from 'antd';\nimport TopAdminTable from '../TopAdminTable';\nimport Modal from 'react-modal';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport FormField from '../FormField';\nimport { update, generateData, isFormValid } from 'components/utils/formAction';\nimport Button from '@material-ui/core/Button';\nimport { createUserByAdmin, editUser, deleteUser, getUsers } from 'redux/actions/admins';\ninterface Props {\n  getUsers(): void;\n  users: any;\n  createUserByAdmin(data: any): void;\n  createUserError: string;\n  deleteUser(data: any): void;\n  deleteUserError: string;\n  editUser(data: any): void;\n  editUserError: string;\n  getUsersError: string;\n}\n\nModal.setAppElement('body');\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '25rem',\n  },\n};\n\nfunction AdminUsers({\n  getUsers,\n  users,\n  createUserByAdmin,\n  createUserError,\n  deleteUser,\n  deleteUserError,\n  editUser,\n  editUserError,\n  getUsersError,\n}: Props) {\n  const initialForm = {\n    formError: false,\n    formMessage: '',\n    formdata: {\n      email: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'email_input',\n          type: 'email',\n          // placeholder: 'Email',\n          label: 'Email',\n        },\n        validation: {\n          required: true,\n          email: true,\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'name_input',\n          type: 'name',\n          label: 'Tên',\n        },\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n      role: {\n        element: 'select',\n        value: 'Quản trị viên',\n        config: {\n          name: 'role_input',\n          type: 'name',\n          label: 'Vai trò',\n          options: [{ value: 'Người dùng' }, { value: 'Quản trị viên' }],\n        },\n        validation: {\n          required: true,\n        },\n        valid: true,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n      password: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'password_input',\n          type: 'password',\n          label: 'Mật khẩu',\n        },\n        validation: {\n          required: true,\n          password: true,\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n      confirmPassword: {\n        element: 'input',\n        value: '',\n        config: {\n          name: 'confirm_password_input',\n          type: 'password',\n          // placeholder: 'Mật khẩu',\n          label: 'Nhập lại mật khẩu',\n        },\n        validation: {\n          required: true,\n          confirm: 'password',\n        },\n        valid: false,\n        touched: false,\n        showlabel: true,\n        validationMessage: '',\n      },\n    },\n  };\n\n  const [loading, setLoading] = useState(true);\n  const [openModal, setOpenModal] = useState(false);\n  const [form, setForm] = useState(initialForm);\n  const [isWaiting, setWaiting] = useState(false);\n  const [edit, setEdit] = useState({ active: false, id: 'none' });\n\n  const columns = [\n    {\n      title: 'Tên',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Vai trò',\n      dataIndex: 'role',\n      key: 'role',\n      render: (role: number) => {\n        if (role === 2) {\n          return <Tag color=\"red\">Chủ sở hữu</Tag>;\n        } else if (role === 1) {\n          return <Tag color=\"orange\">Quản trị viên</Tag>;\n        } else {\n          return <Tag color=\"green\">Nguời dùng</Tag>;\n        }\n      },\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (record: any) => (\n        <Space size=\"middle\">\n          {record.role !== 2 && <a onClick={() => handleEditUser(record._id)}>Sửa</a>}\n          {record.role !== 2 && (\n            <Popconfirm\n              title=\"Bạn có muốn xóa người dùng này?\"\n              onConfirm={() => confirm(record._id)}\n              okText=\"Xóa\"\n              cancelText=\"Không\"\n            >\n              <a>Xóa</a>\n            </Popconfirm>\n          )}\n        </Space>\n      ),\n    },\n  ];\n\n  function confirm(id: string) {\n    deleteUser({ id });\n  }\n\n  const selectUserRole = (role: number) => {\n    if (role === 0) {\n      return 'Người dùng';\n    } else if (role === 1) {\n      return 'Quản trị viên';\n    } else {\n      return 'Chủ sở hữu';\n    }\n  };\n\n  const handleEditUser = (id: string) => {\n    const usersArr: any = Object.values(users);\n    const selectedUser = usersArr.find((user: any) => user._id === id);\n    setEdit({ active: true, id: selectedUser._id });\n    setForm({\n      ...form,\n      formdata: {\n        ...form.formdata,\n        email: {\n          ...form.formdata.email,\n          value: selectedUser.email,\n          valid: true,\n        },\n        name: {\n          ...form.formdata.name,\n          value: selectedUser.name,\n          valid: true,\n        },\n        role: {\n          ...form.formdata.role,\n          value: selectUserRole(selectedUser.role),\n          valid: true,\n        },\n        password: {\n          ...form.formdata.password,\n          valid: true,\n        },\n      },\n    });\n    setOpenModal(true);\n  };\n\n  const handleCreate = () => {\n    setEdit({ active: false, id: 'none' });\n    setForm(initialForm);\n    setOpenModal(true);\n  };\n\n  const closeModal = () => {\n    setOpenModal(false);\n    setForm(initialForm);\n  };\n\n  const updateForm = (element: any) => {\n    const newFormdata: any = update(element, form.formdata, 'admin_register');\n    setForm({\n      ...form,\n      formError: false,\n      formdata: newFormdata,\n    });\n  };\n\n  const submitForm = (e: any): void => {\n    e.preventDefault();\n\n    const dataToSubmit = generateData(form.formdata, 'admin_register');\n    const formIsValid = isFormValid(form.formdata, 'admin_register');\n\n    if (formIsValid) {\n      if (edit.active) {\n        editUser({ id: edit.id, fields: dataToSubmit });\n      } else {\n        createUserByAdmin(dataToSubmit);\n      }\n      setWaiting(true);\n    } else {\n      setForm({\n        ...form,\n        formError: true,\n        formMessage: 'Kiểm tra lại thông tin',\n      });\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  useEffect(() => {\n    if (deleteUserError) {\n      message.error('Xóa thất bại');\n    }\n    if (editUserError) {\n      message.error('Sửa thất bại');\n    }\n    if (getUsersError) {\n      message.error('Lấy người dùng thất bại');\n    }\n  }, [deleteUserError, editUserError, getUsersError]);\n\n  useEffect(() => {\n    if (users !== undefined) {\n      setLoading(false);\n      setWaiting(false);\n      setOpenModal(false);\n    }\n  }, [users]);\n\n  useEffect(() => {\n    if (createUserError === 'Email đã tồn tại') {\n      setForm({\n        ...form,\n        formdata: {\n          ...form.formdata,\n          email: {\n            ...form.formdata.email,\n            valid: false,\n            validationMessage: createUserError,\n          },\n        },\n      });\n\n      setWaiting(false);\n    } else {\n      setForm({\n        ...form,\n        formError: true,\n        formMessage: createUserError,\n      });\n    }\n  }, [createUserError]);\n\n  if (loading) {\n    return (\n      <div className={styles.loading}>\n        <CircularProgress size={50} thickness={4} />\n      </div>\n    );\n  } else {\n    const usersArr: any = Object.values(users);\n\n    return (\n      <React.Fragment>\n        <div className={styles.tableWrapper}>\n          <div className={styles.topWrapper}>\n            <TopAdminTable handleCreate={handleCreate} />\n          </div>\n          <div className={styles.table}>\n            <Table columns={columns} dataSource={usersArr} rowKey={(record) => record._id} />\n          </div>\n        </div>\n        <Modal\n          isOpen={openModal}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n          shouldCloseOnOverlayClick={false}\n        >\n          <div className={styles.modalTitle}>{edit.active ? 'Sửa người dùng' : 'Thêm người dùng'}</div>\n          <form className={styles.form} onSubmit={(event) => submitForm(event)}>\n            <FormField id={'email'} formdata={form.formdata.email} change={(e: any) => updateForm(e)} />\n            <FormField id={'name'} formdata={form.formdata.name} change={(e: any) => updateForm(e)} />\n            <FormField id={'role'} formdata={form.formdata.role} change={(e: any) => updateForm(e)} />\n            <FormField id={'password'} formdata={form.formdata.password} change={(e: any) => updateForm(e)} />\n            <FormField\n              id={'confirmPassword'}\n              formdata={form.formdata.confirmPassword}\n              change={(e: any) => updateForm(e)}\n            />\n            {form.formError && <div className={styles.errorLabel}>{form.formMessage}</div>}\n            {isWaiting && (\n              <div className={styles.waiting}>\n                <CircularProgress color=\"secondary\" />\n              </div>\n            )}\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={styles.button}\n              onClick={(event) => submitForm(event)}\n            >\n              {edit.active ? 'Sửa' : 'Đăng ký'}\n            </Button>\n          </form>\n          <div className={styles.close}>\n            <CancelIcon color=\"secondary\" style={{ cursor: 'pointer' }} onClick={closeModal} />\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  users: state.admins.data,\n  createUserError: state.admins.createUserError,\n  deleteUserError: state.admins.deleteUserError,\n  editUserError: state.admins.editUserError,\n  getUsersError: state.admins.getUsersError,\n});\n\nexport default connect(mapStateToProps, { getUsers, createUserByAdmin, deleteUser, editUser })(AdminUsers);\n"]},"metadata":{},"sourceType":"module"}