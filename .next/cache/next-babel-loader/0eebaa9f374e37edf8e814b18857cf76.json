{"ast":null,"code":"var __jsx = React.createElement;\n//@ts-nocheck\n// vendors\nimport React, { useState, useImperativeHandle, useEffect, useRef, forwardRef, useCallback, useMemo } from 'react';\nimport { Picker } from 'emoji-mart';\nimport t from 'prop-types';\nimport LazyLoad from 'react-lazy-load'; // utils\n\nimport useDebounce from './use-debounce';\n\nfunction InputEmoji({\n  value,\n  onChange,\n  cleanOnEnter,\n  onEnter,\n  placeholder,\n  onResize,\n  onClick,\n  onFocus,\n  maxLength,\n  keepOpenend,\n  onKeyDown,\n  inputClass,\n  disableRecent,\n  tabIndex,\n  // style\n  // height,\n  borderRadius,\n  borderColor,\n  fontSize,\n  fontFamily\n}, ref) {\n  const {\n    0: showPicker,\n    1: setShowPicker\n  } = useState(false);\n  const {\n    0: allEmojiStyle,\n    1: setAllEmojiStyle\n  } = useState({});\n  const {\n    0: currentSize,\n    1: setCurrentSize\n  } = useState(null);\n  const textInputRef = useRef(null);\n  const cleanedTextRef = useRef('');\n  const placeholderRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    get value() {\n      return cleanedTextRef.current;\n    },\n\n    set value(value) {\n      setValue(value);\n    },\n\n    focus: () => {\n      textInputRef.current.focus();\n    },\n    blur: () => {\n      replaceAllTextEmojiToString();\n    }\n  }));\n  const replaceAllTextEmojis = useCallback(text => {\n    let allEmojis = getAllEmojisFromText(text);\n\n    if (allEmojis) {\n      allEmojis = [...new Set(allEmojis)]; // remove duplicates\n\n      allEmojis.forEach(emoji => {\n        const style = allEmojiStyle[emoji];\n        if (!style) return;\n        text = replaceAll(text, emoji, `<img style=\"${style}\" data-emoji=\"${emoji}\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif\" />`);\n      });\n    }\n\n    return text;\n  }, [allEmojiStyle]);\n  const updateHTML = useCallback(nextValue => {\n    nextValue = nextValue || value;\n    textInputRef.current.innerHTML = replaceAllTextEmojis(nextValue || '');\n  }, [replaceAllTextEmojis]);\n  const checkAndEmitResize = useCallback(() => {\n    const nextSize = {\n      width: textInputRef.current.offsetWidth,\n      height: textInputRef.current.offsetHeight\n    };\n\n    if (!currentSize || currentSize.width !== nextSize.width || currentSize.height !== nextSize.height) {\n      onResize(nextSize);\n      setCurrentSize(nextSize);\n    }\n  }, [currentSize, onResize]);\n  const emitChange = useCallback(() => {\n    if (typeof onChange === 'function') {\n      onChange(cleanedTextRef.current);\n    }\n\n    if (typeof onResize === 'function') {\n      checkAndEmitResize();\n    }\n  }, [checkAndEmitResize, onChange, onResize]);\n  useEffect(() => {\n    function handleCopy(e) {\n      const selectedText = window.getSelection();\n      let container = document.createElement('div');\n\n      for (let i = 0, len = selectedText.rangeCount; i < len; ++i) {\n        container.appendChild(selectedText.getRangeAt(i).cloneContents());\n      }\n\n      container = replaceEmojiToString(container);\n      e.clipboardData.setData('text', container.innerText);\n      e.preventDefault();\n\n      function replaceEmojiToString(container) {\n        const images = Array.prototype.slice.call(container.querySelectorAll('img'));\n        images.forEach(image => {\n          image.outerHTML = image.dataset.emoji;\n        });\n        return container;\n      }\n    }\n\n    function handlePaste(e) {\n      e.preventDefault();\n      let content;\n\n      if (window.clipboardData) {\n        content = window.clipboardData.getData('Text');\n        content = replaceAllTextEmojis(content);\n\n        if (window.getSelection) {\n          const selObj = window.getSelection();\n          const selRange = selObj.getRangeAt(0);\n          selRange.deleteContents();\n          selRange.insertNode(document.createTextNode(content));\n        }\n      } else if (e.clipboardData) {\n        content = e.clipboardData.getData('text/plain');\n        content = replaceAllTextEmojis(content);\n        document.execCommand('insertHTML', false, content);\n      }\n    }\n\n    const inputEl = textInputRef.current;\n\n    const handleContentEditableInputCopyAndPaste = () => {\n      inputEl.addEventListener('copy', handleCopy);\n      inputEl.addEventListener('paste', handlePaste);\n    };\n\n    handleContentEditableInputCopyAndPaste();\n    return () => {\n      inputEl.removeEventListener('copy', handleCopy);\n      inputEl.removeEventListener('paste', handlePaste);\n    };\n  }, [replaceAllTextEmojis]);\n  useEffect(() => {\n    const allEmojiButton = Array.prototype.slice.call(document.querySelectorAll('.emoji-mart-category-list > li > button'));\n    const allEmojiStyle = {};\n    allEmojiButton.forEach(emojiButton => {\n      const label = emojiButton.getAttribute('aria-label');\n      const [emoji] = label.split(',');\n      const emojiSpanEl = emojiButton.querySelector('span');\n      const style = replaceAll(emojiSpanEl.style.cssText, '\"', \"'\");\n      allEmojiStyle[emoji] = style;\n    });\n    setAllEmojiStyle(allEmojiStyle);\n  }, []);\n  useEffect(() => {\n    updateHTML();\n  }, [updateHTML]);\n  const replaceAllTextEmojiToString = useCallback(() => {\n    if (!textInputRef.current) {\n      cleanedTextRef.current = '';\n    }\n\n    const container = document.createElement('div');\n    container.innerHTML = textInputRef.current.innerHTML;\n    const images = Array.prototype.slice.call(container.querySelectorAll('img'));\n    images.forEach(image => {\n      image.outerHTML = image.dataset.emoji;\n    });\n    let text = container.innerText; // remove all â†µ for safari\n\n    text = text.replace(/\\n/gi, '');\n    cleanedTextRef.current = text;\n    checkPlaceholder();\n    emitChange();\n  }, [emitChange]);\n  const [replaceAllTextEmojiToStringDebounced] = useDebounce(replaceAllTextEmojiToString, 500);\n  useEffect(() => {\n    function handleKeydown(event) {\n      placeholderRef.current.style.opacity = 0;\n\n      if (typeof maxLength !== 'undefined' && event.keyCode !== 8 && totalCharacters() >= maxLength) {\n        event.preventDefault();\n      }\n\n      if (event.keyCode === 13) {\n        event.preventDefault();\n        replaceAllTextEmojiToString();\n        const cleanedText = cleanedTextRef.current;\n\n        if (typeof onEnter === 'function') {\n          onEnter(cleanedText);\n        }\n\n        if (cleanOnEnter) {\n          updateHTML('');\n        }\n\n        if (typeof onKeyDown === 'function') {\n          onKeyDown(event);\n        }\n\n        return false;\n      }\n\n      if (typeof onKeyDown === 'function') {\n        onKeyDown(event);\n      }\n    }\n\n    function handleKeyup() {\n      replaceAllTextEmojiToStringDebounced();\n    }\n\n    const inputEl = textInputRef.current;\n    inputEl.addEventListener('keydown', handleKeydown);\n    inputEl.addEventListener('keyup', handleKeyup);\n    return () => {\n      inputEl.removeEventListener('keydown', handleKeydown);\n      inputEl.removeEventListener('keyup', handleKeyup);\n    };\n  }, [onChange, cleanOnEnter, onEnter, updateHTML, replaceAllTextEmojiToString, replaceAllTextEmojiToStringDebounced, emitChange, maxLength, onKeyDown]);\n  useEffect(() => {\n    function handleFocus() {\n      if (typeof onFocus === 'function') {\n        onFocus();\n      }\n    }\n\n    const inputEl = textInputRef.current;\n    inputEl.addEventListener('focus', handleFocus);\n    return () => {\n      inputEl.removeEventListener('focus', handleFocus);\n    };\n  }, [onFocus]);\n\n  function totalCharacters() {\n    const text = textInputRef.current.innerText;\n    const html = textInputRef.current.innerHTML;\n    const textCount = text.length;\n    const emojisCount = (html.match(/<img/g) || []).length;\n    return textCount + emojisCount;\n  }\n\n  useEffect(() => {\n    if (textInputRef.current) {\n      setCurrentSize({\n        width: textInputRef.current.offsetWidth,\n        height: textInputRef.current.offsetHeight\n      });\n    }\n  }, []);\n  const excluePicker = useMemo(() => {\n    const exclude = [];\n\n    if (disableRecent) {\n      exclude.push('recent');\n    }\n\n    return exclude;\n  }, [disableRecent]);\n\n  function setValue(value) {\n    updateHTML(value);\n    textInputRef.current.blur();\n  }\n\n  function toggleShowPicker() {\n    setShowPicker(showPicker => !showPicker);\n  }\n\n  function pasteHtmlAtCaret(html) {\n    let sel, range;\n\n    if (window.getSelection) {\n      // IE9 and non-IE\n      sel = window.getSelection();\n\n      if (sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents(); // Range.createContextualFragment() would be useful here but is\n        // non-standard and not supported in all browsers (IE9, for one)\n\n        const el = document.createElement('div');\n        el.innerHTML = html;\n        const frag = document.createDocumentFragment();\n        let node;\n        let lastNode;\n\n        while (node = el.firstChild) {\n          lastNode = frag.appendChild(node);\n        }\n\n        range.insertNode(frag); // Preserve the selection\n\n        if (lastNode) {\n          range = range.cloneRange();\n          range.setStartAfter(lastNode);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    } else if (document.selection && document.selection.type !== 'Control') {\n      // IE < 9\n      document.selection.createRange().pasteHTML(html);\n    }\n  }\n\n  function replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  }\n\n  function getImage(emoji) {\n    let shortNames = `${emoji.short_names}`;\n    shortNames = replaceAll(shortNames, ',', ', ');\n    const emojiSpanEl = document.querySelector(`[aria-label=\"${emoji.native}, ${shortNames}\"] > span`);\n    if (!emojiSpanEl) return '';\n    const style = replaceAll(emojiSpanEl.style.cssText, '\"', \"'\");\n    return `<img style=\"${style}\" data-emoji=\"${emoji.native}\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif\" />`;\n  }\n\n  function handleSelectEmoji(emoji) {\n    placeholderRef.current.style.opacity = 0;\n    textInputRef.current.focus();\n    pasteHtmlAtCaret(getImage(emoji));\n    textInputRef.current.focus();\n    emitChange();\n\n    if (!keepOpenend) {\n      toggleShowPicker();\n    }\n  }\n\n  function getAllEmojisFromText(text) {\n    return text.match(/(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g);\n  }\n\n  function checkPlaceholder() {\n    const text = cleanedTextRef.current;\n\n    if (text !== '' && placeholderRef.current.opacity !== 0) {\n      placeholderRef.current.style.opacity = 0;\n    } else {\n      placeholderRef.current.style.opacity = 1;\n    }\n  }\n\n  function handleClick() {\n    if (typeof onClick === 'function') {\n      onClick();\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"react-emoji\"\n  }, __jsx(\"div\", {\n    className: \"react-emoji-picker--container\"\n  }, __jsx(\"div\", {\n    className: `react-emoji-picker--wrapper${showPicker ? ' react-emoji-picker--wrapper__show' : ''}`\n  }, __jsx(\"div\", {\n    className: `react-emoji-picker${showPicker ? ' react-emoji-picker__show' : ''}`\n  }, __jsx(LazyLoad, null, __jsx(Picker, {\n    showPreview: false,\n    showSkinTones: false,\n    set: \"apple\",\n    onSelect: handleSelectEmoji,\n    exclude: excluePicker\n  }))))), __jsx(\"div\", {\n    className: \"react-input-emoji--container\",\n    style: {\n      borderRadius,\n      borderColor,\n      fontSize,\n      fontFamily\n    }\n  }, __jsx(\"div\", {\n    className: \"react-input-emoji--wrapper\",\n    onClick: handleClick\n  }, __jsx(\"div\", {\n    ref: placeholderRef,\n    className: \"react-input-emoji--placeholder\"\n  }, placeholder), __jsx(\"div\", {\n    ref: textInputRef,\n    tabIndex: tabIndex,\n    contentEditable: true,\n    className: `react-input-emoji--input${inputClass ? ` ${inputClass}` : ''}`,\n    onBlur: emitChange\n  }))), __jsx(\"button\", {\n    className: `react-input-emoji--button${showPicker ? ' react-input-emoji--button__show' : ''}`,\n    onClick: toggleShowPicker\n  }, __jsx(\"img\", {\n    src: \"/icons/smile.svg\",\n    alt: \"smile\",\n    style: {\n      width: '1.5em'\n    }\n  })), showPicker && __jsx(\"div\", {\n    className: \"react-input-emoji--overlay\",\n    onClick: toggleShowPicker\n  }));\n}\n\nconst InputEmojiWithRef = forwardRef(InputEmoji);\nInputEmojiWithRef.propTypes = {\n  value: t.string,\n  onChange: t.func,\n  cleanOnEnter: t.bool,\n  onEnter: t.func,\n  placeholder: t.string,\n  onResize: t.func,\n  onClick: t.func,\n  onFocus: t.func,\n  maxLength: t.number,\n  keepOpenend: t.bool,\n  onKeyDown: t.func,\n  inputClass: t.string,\n  disableRecent: t.bool,\n  tabIndex: t.number,\n  // style\n  height: t.number,\n  borderRadius: t.number,\n  borderColor: t.string,\n  fontSize: t.number,\n  fontFamily: t.string\n};\nInputEmojiWithRef.defaultProps = {\n  height: 30,\n  placeholder: 'Type a message',\n  borderRadius: 21,\n  borderColor: '#EAEAEA',\n  fontSize: 15,\n  fontFamily: 'sans-serif',\n  tabIndex: 0\n};\nexport default InputEmojiWithRef;","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/components/EmojiInput/index.tsx"],"names":["React","useState","useImperativeHandle","useEffect","useRef","forwardRef","useCallback","useMemo","Picker","t","LazyLoad","useDebounce","InputEmoji","value","onChange","cleanOnEnter","onEnter","placeholder","onResize","onClick","onFocus","maxLength","keepOpenend","onKeyDown","inputClass","disableRecent","tabIndex","borderRadius","borderColor","fontSize","fontFamily","ref","showPicker","setShowPicker","allEmojiStyle","setAllEmojiStyle","currentSize","setCurrentSize","textInputRef","cleanedTextRef","placeholderRef","current","setValue","focus","blur","replaceAllTextEmojiToString","replaceAllTextEmojis","text","allEmojis","getAllEmojisFromText","Set","forEach","emoji","style","replaceAll","updateHTML","nextValue","innerHTML","checkAndEmitResize","nextSize","width","offsetWidth","height","offsetHeight","emitChange","handleCopy","e","selectedText","window","getSelection","container","document","createElement","i","len","rangeCount","appendChild","getRangeAt","cloneContents","replaceEmojiToString","clipboardData","setData","innerText","preventDefault","images","Array","prototype","slice","call","querySelectorAll","image","outerHTML","dataset","handlePaste","content","getData","selObj","selRange","deleteContents","insertNode","createTextNode","execCommand","inputEl","handleContentEditableInputCopyAndPaste","addEventListener","removeEventListener","allEmojiButton","emojiButton","label","getAttribute","split","emojiSpanEl","querySelector","cssText","replace","checkPlaceholder","replaceAllTextEmojiToStringDebounced","handleKeydown","event","opacity","keyCode","totalCharacters","cleanedText","handleKeyup","handleFocus","html","textCount","length","emojisCount","match","excluePicker","exclude","push","toggleShowPicker","pasteHtmlAtCaret","sel","range","el","frag","createDocumentFragment","node","lastNode","firstChild","cloneRange","setStartAfter","collapse","removeAllRanges","addRange","selection","type","createRange","pasteHTML","str","find","RegExp","getImage","shortNames","short_names","native","handleSelectEmoji","handleClick","InputEmojiWithRef","propTypes","string","func","bool","number","defaultProps"],"mappings":"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","sourcesContent":["//@ts-nocheck\n// vendors\nimport React, { useState, useImperativeHandle, useEffect, useRef, forwardRef, useCallback, useMemo } from 'react';\nimport { Picker } from 'emoji-mart';\nimport t from 'prop-types';\nimport LazyLoad from 'react-lazy-load';\n// utils\nimport useDebounce from './use-debounce';\n\nfunction InputEmoji(\n  {\n    value,\n    onChange,\n    cleanOnEnter,\n    onEnter,\n    placeholder,\n    onResize,\n    onClick,\n    onFocus,\n    maxLength,\n    keepOpenend,\n    onKeyDown,\n    inputClass,\n    disableRecent,\n    tabIndex,\n    // style\n    // height,\n    borderRadius,\n    borderColor,\n    fontSize,\n    fontFamily,\n  },\n  ref,\n) {\n  const [showPicker, setShowPicker] = useState(false);\n  const [allEmojiStyle, setAllEmojiStyle] = useState({});\n  const [currentSize, setCurrentSize] = useState(null);\n\n  const textInputRef = useRef(null);\n  const cleanedTextRef = useRef('');\n  const placeholderRef = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    get value() {\n      return cleanedTextRef.current;\n    },\n    set value(value) {\n      setValue(value);\n    },\n    focus: () => {\n      textInputRef.current.focus();\n    },\n    blur: () => {\n      replaceAllTextEmojiToString();\n    },\n  }));\n\n  const replaceAllTextEmojis = useCallback(\n    (text) => {\n      let allEmojis = getAllEmojisFromText(text);\n\n      if (allEmojis) {\n        allEmojis = [...new Set(allEmojis)]; // remove duplicates\n\n        allEmojis.forEach((emoji) => {\n          const style = allEmojiStyle[emoji];\n\n          if (!style) return;\n\n          text = replaceAll(\n            text,\n            emoji,\n            `<img style=\"${style}\" data-emoji=\"${emoji}\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif\" />`,\n          );\n        });\n      }\n\n      return text;\n    },\n    [allEmojiStyle],\n  );\n\n  const updateHTML = useCallback(\n    (nextValue) => {\n      nextValue = nextValue || value;\n      textInputRef.current.innerHTML = replaceAllTextEmojis(nextValue || '');\n    },\n    [replaceAllTextEmojis],\n  );\n\n  const checkAndEmitResize = useCallback(() => {\n    const nextSize = {\n      width: textInputRef.current.offsetWidth,\n      height: textInputRef.current.offsetHeight,\n    };\n\n    if (!currentSize || currentSize.width !== nextSize.width || currentSize.height !== nextSize.height) {\n      onResize(nextSize);\n      setCurrentSize(nextSize);\n    }\n  }, [currentSize, onResize]);\n\n  const emitChange = useCallback(() => {\n    if (typeof onChange === 'function') {\n      onChange(cleanedTextRef.current);\n    }\n\n    if (typeof onResize === 'function') {\n      checkAndEmitResize();\n    }\n  }, [checkAndEmitResize, onChange, onResize]);\n\n  useEffect(() => {\n    function handleCopy(e) {\n      const selectedText = window.getSelection();\n\n      let container = document.createElement('div');\n\n      for (let i = 0, len = selectedText.rangeCount; i < len; ++i) {\n        container.appendChild(selectedText.getRangeAt(i).cloneContents());\n      }\n\n      container = replaceEmojiToString(container);\n\n      e.clipboardData.setData('text', container.innerText);\n      e.preventDefault();\n\n      function replaceEmojiToString(container) {\n        const images = Array.prototype.slice.call(container.querySelectorAll('img'));\n\n        images.forEach((image) => {\n          image.outerHTML = image.dataset.emoji;\n        });\n\n        return container;\n      }\n    }\n\n    function handlePaste(e) {\n      e.preventDefault();\n      let content;\n      if (window.clipboardData) {\n        content = window.clipboardData.getData('Text');\n        content = replaceAllTextEmojis(content);\n        if (window.getSelection) {\n          const selObj = window.getSelection();\n          const selRange = selObj.getRangeAt(0);\n          selRange.deleteContents();\n          selRange.insertNode(document.createTextNode(content));\n        }\n      } else if (e.clipboardData) {\n        content = e.clipboardData.getData('text/plain');\n        content = replaceAllTextEmojis(content);\n        document.execCommand('insertHTML', false, content);\n      }\n    }\n\n    const inputEl = textInputRef.current;\n\n    const handleContentEditableInputCopyAndPaste = () => {\n      inputEl.addEventListener('copy', handleCopy);\n      inputEl.addEventListener('paste', handlePaste);\n    };\n\n    handleContentEditableInputCopyAndPaste();\n\n    return () => {\n      inputEl.removeEventListener('copy', handleCopy);\n      inputEl.removeEventListener('paste', handlePaste);\n    };\n  }, [replaceAllTextEmojis]);\n\n  useEffect(() => {\n    const allEmojiButton = Array.prototype.slice.call(\n      document.querySelectorAll('.emoji-mart-category-list > li > button'),\n    );\n\n    const allEmojiStyle = {};\n\n    allEmojiButton.forEach((emojiButton) => {\n      const label = emojiButton.getAttribute('aria-label');\n      const [emoji] = label.split(',');\n\n      const emojiSpanEl = emojiButton.querySelector('span');\n\n      const style = replaceAll(emojiSpanEl.style.cssText, '\"', \"'\");\n\n      allEmojiStyle[emoji] = style;\n    });\n\n    setAllEmojiStyle(allEmojiStyle);\n  }, []);\n\n  useEffect(() => {\n    updateHTML();\n  }, [updateHTML]);\n\n  const replaceAllTextEmojiToString = useCallback(() => {\n    if (!textInputRef.current) {\n      cleanedTextRef.current = '';\n    }\n\n    const container = document.createElement('div');\n    container.innerHTML = textInputRef.current.innerHTML;\n\n    const images = Array.prototype.slice.call(container.querySelectorAll('img'));\n\n    images.forEach((image) => {\n      image.outerHTML = image.dataset.emoji;\n    });\n\n    let text = container.innerText;\n\n    // remove all â†µ for safari\n    text = text.replace(/\\n/gi, '');\n\n    cleanedTextRef.current = text;\n\n    checkPlaceholder();\n\n    emitChange();\n  }, [emitChange]);\n\n  const [replaceAllTextEmojiToStringDebounced] = useDebounce(replaceAllTextEmojiToString, 500);\n\n  useEffect(() => {\n    function handleKeydown(event) {\n      placeholderRef.current.style.opacity = 0;\n\n      if (typeof maxLength !== 'undefined' && event.keyCode !== 8 && totalCharacters() >= maxLength) {\n        event.preventDefault();\n      }\n\n      if (event.keyCode === 13) {\n        event.preventDefault();\n\n        replaceAllTextEmojiToString();\n\n        const cleanedText = cleanedTextRef.current;\n\n        if (typeof onEnter === 'function') {\n          onEnter(cleanedText);\n        }\n\n        if (cleanOnEnter) {\n          updateHTML('');\n        }\n\n        if (typeof onKeyDown === 'function') {\n          onKeyDown(event);\n        }\n\n        return false;\n      }\n\n      if (typeof onKeyDown === 'function') {\n        onKeyDown(event);\n      }\n    }\n\n    function handleKeyup() {\n      replaceAllTextEmojiToStringDebounced();\n    }\n\n    const inputEl = textInputRef.current;\n\n    inputEl.addEventListener('keydown', handleKeydown);\n    inputEl.addEventListener('keyup', handleKeyup);\n\n    return () => {\n      inputEl.removeEventListener('keydown', handleKeydown);\n      inputEl.removeEventListener('keyup', handleKeyup);\n    };\n  }, [\n    onChange,\n    cleanOnEnter,\n    onEnter,\n    updateHTML,\n    replaceAllTextEmojiToString,\n    replaceAllTextEmojiToStringDebounced,\n    emitChange,\n    maxLength,\n    onKeyDown,\n  ]);\n\n  useEffect(() => {\n    function handleFocus() {\n      if (typeof onFocus === 'function') {\n        onFocus();\n      }\n    }\n\n    const inputEl = textInputRef.current;\n\n    inputEl.addEventListener('focus', handleFocus);\n\n    return () => {\n      inputEl.removeEventListener('focus', handleFocus);\n    };\n  }, [onFocus]);\n\n  function totalCharacters() {\n    const text = textInputRef.current.innerText;\n    const html = textInputRef.current.innerHTML;\n\n    const textCount = text.length;\n    const emojisCount = (html.match(/<img/g) || []).length;\n\n    return textCount + emojisCount;\n  }\n\n  useEffect(() => {\n    if (textInputRef.current) {\n      setCurrentSize({\n        width: textInputRef.current.offsetWidth,\n        height: textInputRef.current.offsetHeight,\n      });\n    }\n  }, []);\n\n  const excluePicker = useMemo(() => {\n    const exclude = [];\n\n    if (disableRecent) {\n      exclude.push('recent');\n    }\n\n    return exclude;\n  }, [disableRecent]);\n\n  function setValue(value) {\n    updateHTML(value);\n    textInputRef.current.blur();\n  }\n\n  function toggleShowPicker() {\n    setShowPicker((showPicker) => !showPicker);\n  }\n\n  function pasteHtmlAtCaret(html) {\n    let sel, range;\n    if (window.getSelection) {\n      // IE9 and non-IE\n      sel = window.getSelection();\n      if (sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents();\n\n        // Range.createContextualFragment() would be useful here but is\n        // non-standard and not supported in all browsers (IE9, for one)\n        const el = document.createElement('div');\n        el.innerHTML = html;\n        const frag = document.createDocumentFragment();\n        let node;\n        let lastNode;\n        while ((node = el.firstChild)) {\n          lastNode = frag.appendChild(node);\n        }\n        range.insertNode(frag);\n\n        // Preserve the selection\n        if (lastNode) {\n          range = range.cloneRange();\n          range.setStartAfter(lastNode);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    } else if (document.selection && document.selection.type !== 'Control') {\n      // IE < 9\n      document.selection.createRange().pasteHTML(html);\n    }\n  }\n\n  function replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  }\n\n  function getImage(emoji) {\n    let shortNames = `${emoji.short_names}`;\n\n    shortNames = replaceAll(shortNames, ',', ', ');\n\n    const emojiSpanEl = document.querySelector(`[aria-label=\"${emoji.native}, ${shortNames}\"] > span`);\n\n    if (!emojiSpanEl) return '';\n\n    const style = replaceAll(emojiSpanEl.style.cssText, '\"', \"'\");\n\n    return `<img style=\"${style}\" data-emoji=\"${emoji.native}\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/ce/Transparent.gif\" />`;\n  }\n\n  function handleSelectEmoji(emoji) {\n    placeholderRef.current.style.opacity = 0;\n\n    textInputRef.current.focus();\n\n    pasteHtmlAtCaret(getImage(emoji));\n\n    textInputRef.current.focus();\n\n    emitChange();\n\n    if (!keepOpenend) {\n      toggleShowPicker();\n    }\n  }\n\n  function getAllEmojisFromText(text) {\n    return text.match(\n      /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*/g,\n    );\n  }\n\n  function checkPlaceholder() {\n    const text = cleanedTextRef.current;\n\n    if (text !== '' && placeholderRef.current.opacity !== 0) {\n      placeholderRef.current.style.opacity = 0;\n    } else {\n      placeholderRef.current.style.opacity = 1;\n    }\n  }\n\n  function handleClick() {\n    if (typeof onClick === 'function') {\n      onClick();\n    }\n  }\n\n  return (\n    <div className=\"react-emoji\">\n      <div className=\"react-emoji-picker--container\">\n        <div className={`react-emoji-picker--wrapper${showPicker ? ' react-emoji-picker--wrapper__show' : ''}`}>\n          <div className={`react-emoji-picker${showPicker ? ' react-emoji-picker__show' : ''}`}>\n            <LazyLoad>\n              <Picker\n                showPreview={false}\n                showSkinTones={false}\n                set=\"apple\"\n                onSelect={handleSelectEmoji}\n                exclude={excluePicker}\n              />\n            </LazyLoad>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"react-input-emoji--container\"\n        style={{\n          borderRadius,\n          borderColor,\n          fontSize,\n          fontFamily,\n        }}\n      >\n        <div className=\"react-input-emoji--wrapper\" onClick={handleClick}>\n          <div ref={placeholderRef} className=\"react-input-emoji--placeholder\">\n            {placeholder}\n          </div>\n          <div\n            ref={textInputRef}\n            tabIndex={tabIndex}\n            contentEditable\n            className={`react-input-emoji--input${inputClass ? ` ${inputClass}` : ''}`}\n            onBlur={emitChange}\n          />\n        </div>\n      </div>\n      <button\n        className={`react-input-emoji--button${showPicker ? ' react-input-emoji--button__show' : ''}`}\n        onClick={toggleShowPicker}\n      >\n        <img src=\"/icons/smile.svg\" alt=\"smile\" style={{ width: '1.5em' }} />\n      </button>\n      {showPicker && <div className=\"react-input-emoji--overlay\" onClick={toggleShowPicker} />}\n    </div>\n  );\n}\n\nconst InputEmojiWithRef = forwardRef(InputEmoji);\n\nInputEmojiWithRef.propTypes = {\n  value: t.string,\n  onChange: t.func,\n  cleanOnEnter: t.bool,\n  onEnter: t.func,\n  placeholder: t.string,\n  onResize: t.func,\n  onClick: t.func,\n  onFocus: t.func,\n  maxLength: t.number,\n  keepOpenend: t.bool,\n  onKeyDown: t.func,\n  inputClass: t.string,\n  disableRecent: t.bool,\n  tabIndex: t.number,\n  // style\n  height: t.number,\n  borderRadius: t.number,\n  borderColor: t.string,\n  fontSize: t.number,\n  fontFamily: t.string,\n};\n\nInputEmojiWithRef.defaultProps = {\n  height: 30,\n  placeholder: 'Type a message',\n  borderRadius: 21,\n  borderColor: '#EAEAEA',\n  fontSize: 15,\n  fontFamily: 'sans-serif',\n  tabIndex: 0,\n};\n\nexport default InputEmojiWithRef;\n"]},"metadata":{},"sourceType":"module"}