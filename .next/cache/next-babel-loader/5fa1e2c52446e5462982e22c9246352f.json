{"ast":null,"code":"// @ts-nocheck\n// vendors\nimport { useRef, useCallback, useEffect } from 'react';\nexport default function useDebounce(callback, delay) {\n  const maxWaitArgs = useRef([]);\n  const functionTimeoutHandler = useRef(null);\n  const isComponentUnmounted = useRef(false);\n  const debouncedFunction = callback;\n  useEffect(() => () => {\n    // we use flag, as we allow to call callPending outside the hook\n    isComponentUnmounted.current = true;\n  }, []);\n  const debouncedCallback = useCallback((...args) => {\n    maxWaitArgs.current = args;\n    clearTimeout(functionTimeoutHandler.current);\n    functionTimeoutHandler.current = setTimeout(() => {\n      if (!isComponentUnmounted.current) {\n        debouncedFunction(...args);\n      }\n    }, delay);\n  }, [debouncedFunction, delay]); // At the moment, we use 3 args array so that we save backward compatibility\n\n  return [debouncedCallback];\n}","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/components/EmojiInput/use-debounce.ts"],"names":["useRef","useCallback","useEffect","useDebounce","callback","delay","maxWaitArgs","functionTimeoutHandler","isComponentUnmounted","debouncedFunction","current","debouncedCallback","args","clearTimeout","setTimeout"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA+C,OAA/C;AAEA,eAAe,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;AACnD,QAAMC,WAAW,GAAGN,MAAM,CAAC,EAAD,CAA1B;AAEA,QAAMO,sBAAsB,GAAGP,MAAM,CAAC,IAAD,CAArC;AACA,QAAMQ,oBAAoB,GAAGR,MAAM,CAAC,KAAD,CAAnC;AAEA,QAAMS,iBAAiB,GAAGL,QAA1B;AAEAF,EAAAA,SAAS,CACP,MAAM,MAAM;AACV;AACAM,IAAAA,oBAAoB,CAACE,OAArB,GAA+B,IAA/B;AACD,GAJM,EAKP,EALO,CAAT;AAQA,QAAMC,iBAAiB,GAAGV,WAAW,CACnC,CAAC,GAAGW,IAAJ,KAAa;AACXN,IAAAA,WAAW,CAACI,OAAZ,GAAsBE,IAAtB;AACAC,IAAAA,YAAY,CAACN,sBAAsB,CAACG,OAAxB,CAAZ;AAEAH,IAAAA,sBAAsB,CAACG,OAAvB,GAAiCI,UAAU,CAAC,MAAM;AAChD,UAAI,CAACN,oBAAoB,CAACE,OAA1B,EAAmC;AACjCD,QAAAA,iBAAiB,CAAC,GAAGG,IAAJ,CAAjB;AACD;AACF,KAJ0C,EAIxCP,KAJwC,CAA3C;AAKD,GAVkC,EAWnC,CAACI,iBAAD,EAAoBJ,KAApB,CAXmC,CAArC,CAhBmD,CA8BnD;;AACA,SAAO,CAACM,iBAAD,CAAP;AACD","sourcesContent":["// @ts-nocheck\n// vendors\nimport { useRef, useCallback, useEffect } from 'react';\n\nexport default function useDebounce(callback, delay) {\n  const maxWaitArgs = useRef([]);\n\n  const functionTimeoutHandler = useRef(null);\n  const isComponentUnmounted = useRef(false);\n\n  const debouncedFunction = callback;\n\n  useEffect(\n    () => () => {\n      // we use flag, as we allow to call callPending outside the hook\n      isComponentUnmounted.current = true;\n    },\n    [],\n  );\n\n  const debouncedCallback = useCallback(\n    (...args) => {\n      maxWaitArgs.current = args;\n      clearTimeout(functionTimeoutHandler.current);\n\n      functionTimeoutHandler.current = setTimeout(() => {\n        if (!isComponentUnmounted.current) {\n          debouncedFunction(...args);\n        }\n      }, delay);\n    },\n    [debouncedFunction, delay],\n  );\n\n  // At the moment, we use 3 args array so that we save backward compatibility\n  return [debouncedCallback];\n}\n"]},"metadata":{},"sourceType":"module"}