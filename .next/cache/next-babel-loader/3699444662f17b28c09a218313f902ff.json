{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from './ChatBubble.module.scss';\nimport { connect } from 'react-redux';\nimport { toggleChatBubble } from 'redux/actions/ui';\nimport { toggleRegisterLogin } from 'redux/actions/ui';\nimport ChatWindow from '../ChatWindow'; // @ts-ignore\n\nimport io from 'socket.io-client';\nimport scrollToBottom from 'components/utils/scrollBottom';\nimport { message } from 'antd';\nimport axios from 'config/axios';\n\nfunction ChatBubble(_ref) {\n  var openChatBubble = _ref.openChatBubble,\n      toggleChatBubble = _ref.toggleChatBubble,\n      user = _ref.user,\n      toggleRegisterLogin = _ref.toggleRegisterLogin;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  var _useState2 = useState(false),\n      isOnline = _useState2[0],\n      setOnline = _useState2[1];\n\n  var socketRef = useRef();\n\n  var handleOpenChat = function handleOpenChat() {\n    toggleChatBubble(true);\n\n    if (user) {\n      // @ts-ignore\n      socketRef.current.emit('Set seen', {\n        user: 'Admin',\n        roomId: user._id\n      });\n    }\n  };\n\n  var handleCloseChat = function handleCloseChat() {\n    toggleChatBubble(false);\n  };\n\n  var handleOpenLogin = function handleOpenLogin() {\n    toggleRegisterLogin(true, 'login');\n  };\n\n  var handleSendMessage = function handleSendMessage(text) {\n    if (text) {\n      // @ts-ignore\n      socketRef.current.emit('Chat Message', {\n        data: {\n          roomId: user._id,\n          message: text,\n          sender: user.name,\n          type: 'text',\n          createdAt: Date.now(),\n          roomName: user.name\n        },\n        roomId: user._id\n      }); // @ts-ignore\n    }\n  };\n\n  useEffect(function () {\n    socketRef.current = io();\n\n    if (user) {\n      // @ts-ignore\n      socketRef.current.emit('Login', {\n        userId: user._id\n      }); // @ts-ignore\n\n      socketRef.current.emit('Join room', {\n        roomId: user._id\n      });\n\n      try {\n        axios.post('/messages', {\n          roomId: user._id\n        }).then(function (res) {\n          if (res.data.messages.length) {\n            setMessages(res.data.messages); // console.log(res.data.messages);\n          } else {\n            // @ts-ignore\n            socketRef.current.emit('Initialize Chat', {\n              roomId: user._id,\n              roomName: user.name\n            });\n          }\n        });\n      } catch (error) {\n        message.error(error.response.error);\n      } // @ts-ignore\n\n\n      socketRef.current.on('Chat Message', function (msg) {\n        // @ts-ignore\n        setMessages(function (oldMessages) {\n          return [].concat(_toConsumableArray(oldMessages), [msg]);\n        });\n      }); // @ts-ignore\n\n      socketRef.current.on('Chat Error', function (err) {\n        message.error(err.response);\n      }); // @ts-ignore\n\n      socketRef.current.on('Active Users', function (data) {\n        var dataArr = Object.values(data);\n\n        if (dataArr.includes('Admin')) {\n          setOnline(true);\n        } else {\n          setOnline(false);\n        }\n      }); // @ts-ignore\n\n      socketRef.current.on('Set Seen', function () {\n        axios.post('/messages', {\n          roomId: user._id\n        }).then(function (res) {\n          setMessages(res.data.messages);\n        });\n      });\n    } else {\n      toggleChatBubble(false);\n    }\n  }, [user]);\n\n  var handleSetSeen = function handleSetSeen() {\n    if (user) {\n      // @ts-ignore\n      socketRef.current.emit('Set seen', {\n        user: 'Admin',\n        roomId: user._id\n      });\n    }\n  };\n\n  useEffect(function () {\n    if (openChatBubble) {\n      scrollToBottom();\n    }\n  }, [messages, openChatBubble]);\n  return __jsx(React.Fragment, null, openChatBubble ? __jsx(ChatWindow, {\n    user: user,\n    handleOpenLogin: handleOpenLogin,\n    handleSendMessage: handleSendMessage,\n    handleCloseChat: handleCloseChat,\n    messages: messages,\n    isOnline: isOnline,\n    roomInfo: true,\n    handleClick: handleSetSeen\n  }) : __jsx(\"div\", {\n    className: styles.icon,\n    onClick: handleOpenChat\n  }, __jsx(\"img\", {\n    src: \"/icons/chat.svg\",\n    alt: \"chat\"\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    openChatBubble: state.ui.openChatBubble,\n    user: state.users.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleChatBubble: toggleChatBubble,\n  toggleRegisterLogin: toggleRegisterLogin\n})(ChatBubble);","map":null,"metadata":{},"sourceType":"module"}