{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const Types = {\n  LOGIN_USER: 'user/login-user',\n  LOGIN_USER_ERROR: 'user/login-user-error',\n  GET_USER_SUCCESS: 'user/get-user-success',\n  GET_USER: 'user/get-user',\n  GET_USER_ERROR: 'user/get-user-error',\n  CREATE_USER: 'user/create-user',\n  CREATE_USER_ERROR: 'user/create-user-error',\n  LOG_OUT_USER: 'user/logout-user',\n  LOG_OUT_USER_ERROR: 'user/logout-user-error',\n  UPDATE_USER: 'user/update-user',\n  UPDATE_USER_ERROR: 'user/update-user-error',\n  LOGIN_BY_GOOGLE: 'user/login-by-google',\n  LOGIN_BY_GOOGLE_ERROR: 'user/login-by-google-error',\n  LOGIN_BY_FACEBOOK: 'user/login-by-facebook',\n  LOGIN_BY_FACEBOOK_ERROR: 'user/login-by-facebook-error'\n};\nexport const loginUser = ({\n  email,\n  password\n}) => ({\n  type: Types.LOGIN_USER,\n  payload: {\n    email,\n    password\n  }\n});\nexport const getUser = () => ({\n  type: Types.GET_USER\n});\nexport const getUserSuccess = user => ({\n  type: Types.GET_USER_SUCCESS,\n  payload: _objectSpread({}, user)\n});\nexport const createUser = user => ({\n  type: Types.CREATE_USER,\n  payload: _objectSpread({}, user)\n});\nexport const updateUser = fields => ({\n  type: Types.UPDATE_USER,\n  payload: _objectSpread({}, fields)\n});\nexport const loginByGoogle = fields => ({\n  type: Types.LOGIN_BY_GOOGLE,\n  payload: _objectSpread({}, fields)\n});\nexport const loginByGoogleError = ({\n  error\n}) => ({\n  type: Types.LOGIN_BY_GOOGLE_ERROR,\n  payload: {\n    error\n  }\n});\nexport const createUsersError = ({\n  error\n}) => ({\n  type: Types.CREATE_USER_ERROR,\n  payload: {\n    error\n  }\n});\nexport const updateUserError = ({\n  error\n}) => ({\n  type: Types.UPDATE_USER_ERROR,\n  payload: {\n    error\n  }\n});\nexport const logOutUser = () => ({\n  type: Types.LOG_OUT_USER\n});\nexport const getUserError = () => ({\n  type: Types.GET_USER_ERROR\n});\nexport const loginUserError = ({\n  error\n}) => ({\n  type: Types.LOGIN_USER_ERROR,\n  payload: {\n    error\n  }\n});\nexport const loginByFacebook = fields => ({\n  type: Types.LOGIN_BY_FACEBOOK,\n  payload: _objectSpread({}, fields)\n});\nexport const loginByFacebookError = ({\n  error\n}) => ({\n  type: Types.LOGIN_BY_FACEBOOK_ERROR,\n  payload: {\n    error\n  }\n});","map":null,"metadata":{},"sourceType":"module"}