{"ast":null,"code":"import axios from 'axios';\nimport baseUrl from 'config/basedUrl';\nimport localStorage from 'local-storage'; // @ts-ignore\n\nvar token = localStorage.get('spn_auth');\nvar header = {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n};\nexport var getPostsByAdmin = function getPostsByAdmin() {\n  return axios.get(\"\".concat(baseUrl, \"/api/posts?limit=10000&skip=0&sortBy=type&order=asc\"), header);\n};\nexport var createPost = function createPost(_ref) {\n  var title = _ref.title,\n      content = _ref.content,\n      type = _ref.type,\n      image = _ref.image;\n  var formData = new FormData();\n  formData.append('title', title);\n  formData.append('content', content);\n  formData.append('type', type);\n  formData.append('image', image);\n  return axios.post(\"\".concat(baseUrl, \"/api/post\"), formData, header);\n};\nexport var updatePublish = function updatePublish(_ref2) {\n  var publish = _ref2.publish,\n      id = _ref2.id;\n  var formData = new FormData();\n  formData.append('publish', publish);\n  return axios.put(\"\".concat(baseUrl, \"/api/post/\").concat(id), formData, header);\n};\nexport var deletePost = function deletePost(_ref3) {\n  var id = _ref3.id;\n  return axios[\"delete\"](\"\".concat(baseUrl, \"/api/post/\").concat(id), header);\n};\nexport var updatePost = function updatePost(payload) {\n  var formData = new FormData();\n\n  for (var key in payload) {\n    formData.append(key, payload[key]);\n  }\n\n  return axios.put(\"\".concat(baseUrl, \"/api/post/\").concat(payload.id), formData, header);\n};","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/redux/api/posts.ts"],"names":["axios","baseUrl","localStorage","token","get","header","headers","getPostsByAdmin","createPost","title","content","type","image","formData","FormData","append","post","updatePublish","publish","id","put","deletePost","updatePost","payload","key"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CAEA;;AACA,IAAMC,KAAK,GAAGD,YAAY,CAACE,GAAb,CAAiB,UAAjB,CAAd;AACA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,qBAAiB,YAAYH;AADtB;AADI,CAAf;AAMA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAOP,KAAK,CAACI,GAAN,WAAaH,OAAb,0DAA2EI,MAA3E,CAAP;AACD,CAFM;AAIP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,OAA0C;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAClE,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,KAAzB;AACAI,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BL,OAA3B;AACAG,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACAE,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB;AACA,SAAOZ,KAAK,CAACgB,IAAN,WAAcf,OAAd,gBAAkCY,QAAlC,EAA4CR,MAA5C,CAAP;AACD,CAPM;AASP,OAAO,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,QAA0B;AAAA,MAAvBC,OAAuB,SAAvBA,OAAuB;AAAA,MAAdC,EAAc,SAAdA,EAAc;AACrD,MAAMN,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BG,OAA3B;AACA,SAAOlB,KAAK,CAACoB,GAAN,WAAanB,OAAb,uBAAiCkB,EAAjC,GAAuCN,QAAvC,EAAiDR,MAAjD,CAAP;AACD,CAJM;AAMP,OAAO,IAAMgB,UAAU,GAAG,SAAbA,UAAa,QAAiB;AAAA,MAAdF,EAAc,SAAdA,EAAc;AACzC,SAAOnB,KAAK,UAAL,WAAgBC,OAAhB,uBAAoCkB,EAApC,GAA0Cd,MAA1C,CAAP;AACD,CAFM;AAIP,OAAO,IAAMiB,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAkB;AAC1C,MAAMV,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,OAAK,IAAMU,GAAX,IAAkBD,OAAlB,EAA2B;AACzBV,IAAAA,QAAQ,CAACE,MAAT,CAAgBS,GAAhB,EAAqBD,OAAO,CAACC,GAAD,CAA5B;AACD;;AAED,SAAOxB,KAAK,CAACoB,GAAN,WAAanB,OAAb,uBAAiCsB,OAAO,CAACJ,EAAzC,GAA+CN,QAA/C,EAAyDR,MAAzD,CAAP;AACD,CAPM","sourcesContent":["import axios from 'axios';\nimport baseUrl from 'config/basedUrl'\nimport localStorage from 'local-storage';\n\n// @ts-ignore\nconst token = localStorage.get('spn_auth')\nconst header = {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n}\n\nexport const getPostsByAdmin = () => {\n  return axios.get(`${baseUrl}/api/posts?limit=10000&skip=0&sortBy=type&order=asc`, header);\n};\n\nexport const createPost = ({ title, content, type, image }: any) => {\n  const formData = new FormData();\n  formData.append('title', title);\n  formData.append('content', content);\n  formData.append('type', type);\n  formData.append('image', image);\n  return axios.post(`${baseUrl}/api/post`, formData, header);\n};\n\nexport const updatePublish = ({ publish, id }: any) => {\n  const formData = new FormData();\n  formData.append('publish', publish);\n  return axios.put(`${baseUrl}/api/post/${id}`, formData, header);\n};\n\nexport const deletePost = ({ id }: any) => {\n  return axios.delete(`${baseUrl}/api/post/${id}`, header);\n};\n\nexport const updatePost = (payload: any) => {\n  const formData = new FormData();\n  for (const key in payload) {\n    formData.append(key, payload[key]);\n  }\n\n  return axios.put(`${baseUrl}/api/post/${payload.id}`, formData, header);\n};\n"]},"metadata":{},"sourceType":"module"}