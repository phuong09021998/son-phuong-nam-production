{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'config/axios';\nimport styles from './UserAvatar.module.scss';\nimport { Skeleton } from 'antd';\nimport { Avatar } from 'antd';\nimport baseUrl from 'config/basedUrl';\nimport localStorage from 'local-storage'; // @ts-ignore\n\nvar token = localStorage.get('spn_auth');\nvar header = {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n};\n\nfunction UserAvatar(_ref) {\n  _s();\n\n  var userId = _ref.userId;\n\n  var _useState = useState(),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  useEffect(function () {\n    axios.get(\"/user/\".concat(userId, \"/\"), header).then(function (res) {\n      return setUser(res.data.user);\n    });\n  }, []);\n\n  if (!user) {\n    return __jsx(Skeleton, {\n      avatar: true\n    });\n  } else {\n    // @ts-ignore\n    if (user.avatar) {\n      return __jsx(\"div\", {\n        className: styles.avatar\n      }, __jsx(Avatar, {\n        src: \"\".concat(baseUrl, \"/api/user/avatar\")\n      })); // @ts-ignore\n    } else if (user.thirdPartyAvatar) {\n      return __jsx(\"div\", {\n        className: styles.avatar\n      }, __jsx(Avatar, {\n        src: user.thirdPartyAvatar\n      })); // @ts-ignore\n    } else if (!user.avatar) {\n      return __jsx(\"div\", {\n        className: styles.avatar\n      }, __jsx(Avatar, {\n        className: styles.avatarName\n      }, user.name[0]));\n    }\n  }\n}\n\n_s(UserAvatar, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = UserAvatar;\nexport default UserAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAvatar\");","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/components/UserAvatar/index.tsx"],"names":["React","useEffect","useState","axios","styles","Skeleton","Avatar","baseUrl","localStorage","token","get","header","headers","UserAvatar","userId","user","setUser","then","res","data","avatar","thirdPartyAvatar","avatarName","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CACA;;AACA,IAAMC,KAAK,GAAGD,YAAY,CAACE,GAAb,CAAiB,UAAjB,CAAd;AACA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,qBAAiB,YAAYH;AADtB;AADI,CAAf;;AAMA,SAASI,UAAT,OAAqC;AAAA;;AAAA,MAAfC,MAAe,QAAfA,MAAe;;AAAA,kBACXZ,QAAQ,EADG;AAAA,MAC5Ba,IAD4B;AAAA,MACtBC,OADsB;;AAGnCf,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,KAAK,CAACO,GAAN,iBAAmBI,MAAnB,QAA8BH,MAA9B,EAAsCM,IAAtC,CAA2C,UAACC,GAAD;AAAA,aAASF,OAAO,CAACE,GAAG,CAACC,IAAJ,CAASJ,IAAV,CAAhB;AAAA,KAA3C;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,MAAC,QAAD;AAAU,MAAA,MAAM;AAAhB,MAAP;AACD,GAFD,MAEO;AACL;AACA,QAAIA,IAAI,CAACK,MAAT,EAAiB;AACf,aACE;AAAK,QAAA,SAAS,EAAEhB,MAAM,CAACgB;AAAvB,SACE,MAAC,MAAD;AAAQ,QAAA,GAAG,YAAKb,OAAL;AAAX,QADF,CADF,CADe,CAOf;AACD,KARD,MAQO,IAAIQ,IAAI,CAACM,gBAAT,EAA2B;AAChC,aACE;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAACgB;AAAvB,SAEE,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAEL,IAAI,CAACM;AAAlB,QAFF,CADF,CADgC,CAQhC;AACD,KATM,MASA,IAAI,CAACN,IAAI,CAACK,MAAV,EAAkB;AACvB,aACE;AAAK,QAAA,SAAS,EAAEhB,MAAM,CAACgB;AAAvB,SAEE,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAEhB,MAAM,CAACkB;AAA1B,SAAuCP,IAAI,CAACQ,IAAL,CAAU,CAAV,CAAvC,CAFF,CADF;AAMD;AACF;AACF;;GArCQV,U;;KAAAA,U;AAuCT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'config/axios';\nimport styles from './UserAvatar.module.scss';\nimport { Skeleton } from 'antd';\nimport { Avatar } from 'antd';\nimport baseUrl from 'config/basedUrl';\nimport localStorage from 'local-storage';\n// @ts-ignore\nconst token = localStorage.get('spn_auth')\nconst header = {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n}\n\nfunction UserAvatar({ userId }: any) {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    axios.get(`/user/${userId}/`, header).then((res) => setUser(res.data.user));\n  }, []);\n\n  if (!user) {\n    return <Skeleton avatar />;\n  } else {\n    // @ts-ignore\n    if (user.avatar) {\n      return (\n        <div className={styles.avatar}>\n          <Avatar src={`${baseUrl}/api/user/avatar`} />\n        </div>\n      );\n\n      // @ts-ignore\n    } else if (user.thirdPartyAvatar) {\n      return (\n        <div className={styles.avatar}>\n          {/* @ts-ignore */}\n          <Avatar src={user.thirdPartyAvatar} />\n        </div>\n      );\n\n      // @ts-ignore\n    } else if (!user.avatar) {\n      return (\n        <div className={styles.avatar}>\n          {/* @ts-ignore */}\n          <Avatar className={styles.avatarName}>{user.name[0]}</Avatar>\n        </div>\n      );\n    }\n  }\n}\n\nexport default UserAvatar;\n"]},"metadata":{},"sourceType":"module"}