{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getCarousel),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetCarouselRequest);\n\nimport { takeEvery, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/site';\nimport * as api from '../api/site';\n\nfunction getCarousel() {\n  var result;\n  return _regeneratorRuntime.wrap(function getCarousel$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(api.getCarousel);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put(actions.getCarouselSuccess({\n            items: result.data.site.carousel\n          }));\n\n        case 6:\n          _context.next = 10;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchGetCarouselRequest() {\n  return _regeneratorRuntime.wrap(function watchGetCarouselRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.Types.GET_CAROUSEL, getCarousel);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nvar siteSagas = [fork(watchGetCarouselRequest)];\nexport default siteSagas;","map":{"version":3,"sources":["/media/robert/DATA/Work/web-project/phuong-nam/src-code/redux/sagas/site.ts"],"names":["getCarousel","watchGetCarouselRequest","takeEvery","call","put","fork","actions","api","result","getCarouselSuccess","items","data","site","carousel","Types","GET_CAROUSEL","siteSagas"],"mappings":";;oDAIUA,W;qDAOAC,uB;;AAXV,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;;AAEA,SAAUP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMG,IAAI,CAACI,GAAG,CAACP,WAAL,CAAV;;AAFnB;AAEUQ,UAAAA,MAFV;AAAA;AAGI,iBAAMJ,GAAG,CAACE,OAAO,CAACG,kBAAR,CAA2B;AAAEC,YAAAA,KAAK,EAAEF,MAAM,CAACG,IAAP,CAAYC,IAAZ,CAAiBC;AAA1B,WAA3B,CAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUZ,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,SAAS,CAACI,OAAO,CAACQ,KAAR,CAAcC,YAAf,EAA6Bf,WAA7B,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,IAAMgB,SAAS,GAAG,CAACX,IAAI,CAACJ,uBAAD,CAAL,CAAlB;AAEA,eAAee,SAAf","sourcesContent":["import { takeEvery, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/site';\nimport * as api from '../api/site';\n\nfunction* getCarousel() {\n  try {\n    const result = yield call(api.getCarousel);\n    yield put(actions.getCarouselSuccess({ items: result.data.site.carousel }));\n  } catch (error) {}\n}\n\nfunction* watchGetCarouselRequest() {\n  yield takeEvery(actions.Types.GET_CAROUSEL, getCarousel);\n}\n\nconst siteSagas = [fork(watchGetCarouselRequest)];\n\nexport default siteSagas;\n"]},"metadata":{},"sourceType":"module"}